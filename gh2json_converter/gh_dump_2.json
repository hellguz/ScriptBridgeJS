{
 "Components": [
  {
   "Id": 0,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 1,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 2,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 3,
   "Name": "Curve",
   "NickName": "Livingroom",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "Livingroom",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 4,
   "Name": "Curve",
   "NickName": "Kitchen",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "Kitchen",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 5,
   "Name": "Curve",
   "NickName": "Bathroom",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "Bathroom",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 6,
   "Name": "Curve",
   "NickName": "Bedroom",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "Bedroom",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 7,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 8,
   "Name": "Curve",
   "NickName": "Apartment contour",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "Apartment contour",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 9,
   "Name": "Cluster",
   "NickName": "Furnisher",
   "Description": "Contains a cluster of Grasshopper components",
   "IsComponent": true,
   "Inputs": [
    [],
    [
     [
      8,
      0
     ]
    ],
    [
     [
      6,
      0
     ]
    ],
    [
     [
      13,
      0
     ]
    ],
    [
     [
      3,
      0
     ]
    ],
    [
     [
      4,
      0
     ]
    ],
    [
     [
      5,
      0
     ]
    ],
    [
     [
      14,
      0
     ]
    ],
    [
     [
      11,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "wall index ",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "Apartment Contour",
     "TypeName": "Curve"
    },
    {
     "NickName": "Bedroom",
     "TypeName": "Curve"
    },
    {
     "NickName": "Children",
     "TypeName": "Curve"
    },
    {
     "NickName": "Living Room",
     "TypeName": "Curve"
    },
    {
     "NickName": "Kitchen",
     "TypeName": "Curve"
    },
    {
     "NickName": "Bathroom",
     "TypeName": "Curve"
    },
    {
     "NickName": "Corridor",
     "TypeName": "Curve"
    },
    {
     "NickName": "Staircase",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "importance_furniture",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "score max",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "score min",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "Scores",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 10,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      9,
      3
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 11,
   "Name": "Surface",
   "NickName": "Staircase",
   "Description": "Contains a collection of generic surfaces",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "Staircase",
     "TypeName": "Surface"
    }
   ]
  },
  {
   "Id": 12,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 13,
   "Name": "Curve",
   "NickName": "Children",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "Children",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 14,
   "Name": "Curve",
   "NickName": "Corridor",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "Corridor",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 15,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 16,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 17,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 18,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 19,
   "Name": "Panel",
   "NickName": "Pre-setting (select edge)",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "Pre-setting (select edge)",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 20,
   "Name": "Geometry",
   "NickName": "detsils",
   "Description": "Contains a collection of generic geometry",
   "IsComponent": false,
   "Inputs": [
    [
     [
      36,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Geometry"
    }
   ],
   "Outputs": [
    {
     "NickName": "detsils",
     "TypeName": "Geometry"
    }
   ]
  },
  {
   "Id": 21,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      24,
      0
     ]
    ],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 22,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 23,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      20,
      0
     ]
    ],
    [
     [
      21,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 24,
   "Name": "Data",
   "NickName": "indexes furniture var",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      67,
      1
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "indexes furniture var",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 25,
   "Name": "Data",
   "NickName": "Transformation data",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      68,
      1
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "Transformation data",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 26,
   "Name": "Transform",
   "NickName": "Transform",
   "Description": "Transform an object.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      23,
      0
     ]
    ],
    [
     [
      27,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Geometry"
    },
    {
     "NickName": "T",
     "TypeName": "Transform"
    }
   ],
   "Outputs": [
    {
     "NickName": "G",
     "TypeName": "Geometry"
    }
   ]
  },
  {
   "Id": 27,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      25,
      0
     ]
    ],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 28,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 29,
   "Name": "List Length",
   "NickName": "list length options tree",
   "Description": "Measure the length of a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      28,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "list ",
     "TypeName": "Integer"
    }
   ]
  },
  {
   "Id": 30,
   "Name": "Repeat Data",
   "NickName": "Repeat",
   "Description": "Repeat a pattern until it reaches a certain length.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      775,
      0
     ]
    ],
    [
     [
      31,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 31,
   "Name": "Data",
   "NickName": "Data",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      29,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "Data",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 32,
   "Name": "Repeat Data",
   "NickName": "Repeat",
   "Description": "Repeat a pattern until it reaches a certain length.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      776,
      0
     ]
    ],
    [
     [
      31,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 33,
   "Name": "Data",
   "NickName": "Data",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "Data",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 34,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      102,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 35,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      103,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 36,
   "Name": "Geometry",
   "NickName": "RESULT_1_Details",
   "Description": "Contains a collection of generic geometry",
   "IsComponent": false,
   "Inputs": [
    [
     [
      773,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Geometry"
    }
   ],
   "Outputs": [
    {
     "NickName": "RESULT_1_Details",
     "TypeName": "Geometry"
    }
   ]
  },
  {
   "Id": 37,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      107,
      0
     ]
    ],
    [
     [
      117,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 38,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      108,
      0
     ]
    ],
    [
     [
      117,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 39,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      50,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 40,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      21,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 41,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 42,
   "Name": "Merge",
   "NickName": "Merge",
   "Description": "Merge a bunch of data streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      26,
      0
     ]
    ],
    [],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "D1",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D2",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D3",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D4",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 43,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      26,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 44,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 45,
   "Name": "Null Item",
   "NickName": "Null",
   "Description": "Test a data item for null or invalidity",
   "IsComponent": true,
   "Inputs": [
    [
     [
      51,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "I",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "N",
     "TypeName": "Boolean"
    },
    {
     "NickName": "X",
     "TypeName": "Boolean"
    },
    {
     "NickName": "D",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 46,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      45,
      0
     ]
    ],
    [
     [
      37,
      0
     ]
    ],
    [
     [
      107,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(1)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 47,
   "Name": "Null Item",
   "NickName": "Null",
   "Description": "Test a data item for null or invalidity",
   "IsComponent": true,
   "Inputs": [
    [
     [
      52,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "I",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "N",
     "TypeName": "Boolean"
    },
    {
     "NickName": "X",
     "TypeName": "Boolean"
    },
    {
     "NickName": "D",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 48,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      47,
      0
     ]
    ],
    [
     [
      38,
      0
     ]
    ],
    [
     [
      108,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(1)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 49,
   "Name": "Data",
   "NickName": "score",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      774,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "score",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 50,
   "Name": "List Item",
   "NickName": "score",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      49,
      0
     ]
    ],
    [
     [
      21,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 51,
   "Name": "Clean Tree",
   "NickName": "Clean",
   "Description": "Removed all null and invalid items from a data tree.",
   "IsComponent": true,
   "Inputs": [
    [],
    [],
    [],
    [
     [
      37,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "N",
     "TypeName": "Boolean"
    },
    {
     "NickName": "X",
     "TypeName": "Boolean"
    },
    {
     "NickName": "E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 52,
   "Name": "Clean Tree",
   "NickName": "Clean",
   "Description": "Removed all null and invalid items from a data tree.",
   "IsComponent": true,
   "Inputs": [
    [],
    [],
    [],
    [
     [
      38,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "N",
     "TypeName": "Boolean"
    },
    {
     "NickName": "X",
     "TypeName": "Boolean"
    },
    {
     "NickName": "E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 53,
   "Name": "Data",
   "NickName": "score",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      774,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "score",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 54,
   "Name": "Data",
   "NickName": "indexes furniture var",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      46,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "indexes furniture var",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 55,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      56,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 56,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      53,
      0
     ]
    ],
    [
     [
      54,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 57,
   "Name": "Data",
   "NickName": "all scores",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      56,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "all scores",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 58,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      57,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 59,
   "Name": "Merge",
   "NickName": "Merge",
   "Description": "Merge a bunch of data streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      58,
      0
     ]
    ],
    [],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "D1",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D2",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D3",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D4",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 60,
   "Name": "Mass Addition",
   "NickName": "MA",
   "Description": "Perform mass addition of a list of items",
   "IsComponent": true,
   "Inputs": [
    [
     [
      62,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "I",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "Pr",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 61,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 62,
   "Name": "Clean Tree",
   "NickName": "Clean",
   "Description": "Removed all null and invalid items from a data tree.",
   "IsComponent": true,
   "Inputs": [
    [],
    [],
    [],
    [
     [
      59,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "N",
     "TypeName": "Boolean"
    },
    {
     "NickName": "X",
     "TypeName": "Boolean"
    },
    {
     "NickName": "E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 63,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      60,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 64,
   "Name": "Clean Tree",
   "NickName": "Clean",
   "Description": "Removed all null and invalid items from a data tree.",
   "IsComponent": true,
   "Inputs": [
    [],
    [],
    [],
    [
     [
      63,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "N",
     "TypeName": "Boolean"
    },
    {
     "NickName": "X",
     "TypeName": "Boolean"
    },
    {
     "NickName": "E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 65,
   "Name": "Null Item",
   "NickName": "Null",
   "Description": "Test a data item for null or invalidity",
   "IsComponent": true,
   "Inputs": [
    [
     [
      64,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "I",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "N",
     "TypeName": "Boolean"
    },
    {
     "NickName": "X",
     "TypeName": "Boolean"
    },
    {
     "NickName": "D",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 66,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      65,
      0
     ]
    ],
    [
     [
      63,
      0
     ]
    ],
    [
     [
      60,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(1)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 67,
   "Name": "Sort List",
   "NickName": "Sort",
   "Description": "Sort a list of numeric keys.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      66,
      0
     ]
    ],
    [
     [
      46,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 68,
   "Name": "Sort List",
   "NickName": "Sort",
   "Description": "Sort a list of numeric keys.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      66,
      0
     ]
    ],
    [
     [
      48,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 69,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      67,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 70,
   "Name": "Custom Preview Lineweights",
   "NickName": "PreviewLW",
   "Description": "Custom Preview with Lineweights",
   "IsComponent": true,
   "Inputs": [
    [
     [
      42,
      0
     ]
    ],
    [
     [
      71,
      0
     ]
    ],
    [
     [
      72,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Geometry"
    },
    {
     "NickName": "S",
     "TypeName": "Shader"
    },
    {
     "NickName": "T",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": []
  },
  {
   "Id": 71,
   "Name": "Colour Swatch",
   "NickName": "Swatch",
   "Description": "Colour (palette) swatch",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "Swatch",
     "TypeName": "Colour"
    }
   ]
  },
  {
   "Id": 72,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 73,
   "Name": "Merge",
   "NickName": "Merge",
   "Description": "Merge a bunch of data streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      122,
      0
     ]
    ],
    [
     [
      123,
      0
     ]
    ],
    [],
    [
     [
      124,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "D1",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D2",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D3",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D4",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D5",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 74,
   "Name": "Flatten Tree",
   "NickName": "Flatten",
   "Description": "Flatten a data tree by removing all branching information.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      73,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Path"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 75,
   "Name": "List Length",
   "NickName": "Lng",
   "Description": "Measure the length of a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      74,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ]
  },
  {
   "Id": 76,
   "Name": "Panel",
   "NickName": "WOHNUNGSTYP",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      75,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "WOHNUNGSTYP",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 77,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 78,
   "Name": "Polyline Offset",
   "NickName": "PolyOffset",
   "Description": "Offset a polyline curve using Clipper",
   "IsComponent": true,
   "Inputs": [
    [
     [
      84,
      0
     ]
    ],
    [
     [
      79,
      0
     ]
    ],
    [],
    [],
    [],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "P",
     "TypeName": "Curve"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    },
    {
     "NickName": "Pln",
     "TypeName": "Plane"
    },
    {
     "NickName": "T",
     "TypeName": "Number"
    },
    {
     "NickName": "CF",
     "TypeName": "Integer"
    },
    {
     "NickName": "OF",
     "TypeName": "Integer"
    },
    {
     "NickName": "M",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "H",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 79,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 80,
   "Name": "Curve",
   "NickName": "inner walls contour",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      78,
      1
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "inner walls contour",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 81,
   "Name": "Curve",
   "NickName": "door area",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      269,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "door area",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 82,
   "Name": "Cluster",
   "NickName": "Cluster",
   "Description": "Contains a cluster of Grasshopper components",
   "IsComponent": true,
   "Inputs": [
    [
     [
      80,
      0
     ]
    ],
    [
     [
      252,
      0
     ]
    ],
    [
     [
      119,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "room",
     "TypeName": "Curve"
    },
    {
     "NickName": "Pt door",
     "TypeName": "Point"
    },
    {
     "NickName": "door width",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "door area",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 83,
   "Name": "Region Difference",
   "NickName": "RDiff",
   "Description": "Difference between two sets of planar closed curves (regions)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      80,
      0
     ]
    ],
    [
     [
      81,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Curve"
    },
    {
     "NickName": "B",
     "TypeName": "Curve"
    },
    {
     "NickName": "P",
     "TypeName": "Plane"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 84,
   "Name": "Curve",
   "NickName": "room",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      253,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 85,
   "Name": "Curve",
   "NickName": "room diff",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      83,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room diff",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 86,
   "Name": "Curve",
   "NickName": "room",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      80,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 87,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 88,
   "Name": "Wrap List",
   "NickName": "Wrap",
   "Description": "Converts a list of data into a single object",
   "IsComponent": true,
   "Inputs": [
    [
     [
      278,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "W",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 89,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      88,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 90,
   "Name": "List Length",
   "NickName": "Lng",
   "Description": "Measure the length of a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      89,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ]
  },
  {
   "Id": 91,
   "Name": "Panel",
   "NickName": "Nr of Blocks to place",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      92,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "Nr of Blocks to place",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 92,
   "Name": "List Length",
   "NickName": "Lng",
   "Description": "Measure the length of a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      90,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ]
  },
  {
   "Id": 93,
   "Name": "Explode Tree",
   "NickName": "BANG!",
   "Description": "Extract all the branches from a tree",
   "IsComponent": true,
   "Inputs": [
    [
     [
      89,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "{0}",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "{1}",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "{ }",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 94,
   "Name": "Unwrap List",
   "NickName": "Block 0",
   "Description": "Converts a data wrapper into a list",
   "IsComponent": true,
   "Inputs": [
    [
     [
      93,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "WD",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 95,
   "Name": "Unwrap List",
   "NickName": "Block 1",
   "Description": "Converts a data wrapper into a list",
   "IsComponent": true,
   "Inputs": [
    [
     [
      93,
      1
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "WD",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 96,
   "Name": "Unwrap List",
   "NickName": "Block 2",
   "Description": "Converts a data wrapper into a list",
   "IsComponent": true,
   "Inputs": [
    [
     [
      93,
      2
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "WD",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 97,
   "Name": "Number",
   "NickName": "nr of rooms of this type",
   "Description": "Contains a collection of floating point numbers",
   "IsComponent": false,
   "Inputs": [
    [
     [
      92,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "nr of rooms of this type",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 98,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 99,
   "Name": "Null Item",
   "NickName": "Null",
   "Description": "Test a data item for null or invalidity",
   "IsComponent": true,
   "Inputs": [
    [
     [
      101,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "I",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "N",
     "TypeName": "Boolean"
    },
    {
     "NickName": "X",
     "TypeName": "Boolean"
    },
    {
     "NickName": "D",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 100,
   "Name": "Flatten Tree",
   "NickName": "Flatten",
   "Description": "Flatten a data tree by removing all branching information.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      31,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Path"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 101,
   "Name": "Clean Tree",
   "NickName": "Clean",
   "Description": "Removed all null and invalid items from a data tree.",
   "IsComponent": true,
   "Inputs": [
    [],
    [],
    [],
    [
     [
      100,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "N",
     "TypeName": "Boolean"
    },
    {
     "NickName": "X",
     "TypeName": "Boolean"
    },
    {
     "NickName": "E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 102,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      99,
      0
     ]
    ],
    [
     [
      30,
      0
     ]
    ],
    [
     [
      775,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(1)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 103,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      99,
      0
     ]
    ],
    [
     [
      32,
      0
     ]
    ],
    [
     [
      776,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(1)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 104,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 105,
   "Name": "Repeat Data",
   "NickName": "Repeat",
   "Description": "Repeat a pattern until it reaches a certain length.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      34,
      0
     ]
    ],
    [
     [
      33,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 106,
   "Name": "Repeat Data",
   "NickName": "Repeat",
   "Description": "Repeat a pattern until it reaches a certain length.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      35,
      0
     ]
    ],
    [
     [
      33,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 107,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      112,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 108,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      113,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 109,
   "Name": "Null Item",
   "NickName": "Null",
   "Description": "Test a data item for null or invalidity",
   "IsComponent": true,
   "Inputs": [
    [
     [
      111,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "I",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "N",
     "TypeName": "Boolean"
    },
    {
     "NickName": "X",
     "TypeName": "Boolean"
    },
    {
     "NickName": "D",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 110,
   "Name": "Flatten Tree",
   "NickName": "Flatten",
   "Description": "Flatten a data tree by removing all branching information.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      33,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Path"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 111,
   "Name": "Clean Tree",
   "NickName": "Clean",
   "Description": "Removed all null and invalid items from a data tree.",
   "IsComponent": true,
   "Inputs": [
    [],
    [],
    [],
    [
     [
      110,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "N",
     "TypeName": "Boolean"
    },
    {
     "NickName": "X",
     "TypeName": "Boolean"
    },
    {
     "NickName": "E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 112,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      109,
      0
     ]
    ],
    [
     [
      105,
      0
     ]
    ],
    [
     [
      34,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(1)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 113,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      109,
      0
     ]
    ],
    [
     [
      106,
      0
     ]
    ],
    [
     [
      35,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(1)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 114,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 115,
   "Name": "Number",
   "NickName": "nr of rooms of this type",
   "Description": "Contains a collection of floating point numbers",
   "IsComponent": false,
   "Inputs": [
    [
     [
      116,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "nr of rooms of this type",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 116,
   "Name": "List Length",
   "NickName": "Lng",
   "Description": "Measure the length of a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      86,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ]
  },
  {
   "Id": 117,
   "Name": "Addition",
   "NickName": "A\u002BB",
   "Description": "Mathematical addition",
   "IsComponent": true,
   "Inputs": [
    [
     [
      97,
      0
     ]
    ],
    [
     [
      118,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 118,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 119,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 120,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 121,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      60,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 122,
   "Name": "Curve",
   "NickName": "Bedroom",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      6,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "Bedroom",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 123,
   "Name": "Curve",
   "NickName": "Children",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      13,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "Children",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 124,
   "Name": "Curve",
   "NickName": "Living Room",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      3,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "Living Room",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 125,
   "Name": "Curve",
   "NickName": "Kitchen",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      4,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "Kitchen",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 126,
   "Name": "Curve",
   "NickName": "Bathroom",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      5,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "Bathroom",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 127,
   "Name": "Curve",
   "NickName": "Apartment Contour",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      8,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "Apartment Contour",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 128,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 129,
   "Name": "Merge",
   "NickName": "Merge",
   "Description": "Merge a bunch of data streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      73,
      0
     ]
    ],
    [
     [
      126,
      0
     ]
    ],
    [
     [
      125,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "D1",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D2",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D3",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D4",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 130,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 131,
   "Name": "Curve",
   "NickName": "Children",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      123,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "Children",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 132,
   "Name": "Curve",
   "NickName": "Working",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "Working",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 133,
   "Name": "Merge",
   "NickName": "Merge",
   "Description": "Merge a bunch of data streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      131,
      0
     ]
    ],
    [
     [
      132,
      0
     ]
    ],
    [
     [
      152,
      0
     ]
    ],
    [
     [
      172,
      0
     ]
    ],
    [
     [
      191,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "D1",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D2",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D3",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D4",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D5",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D6",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 134,
   "Name": "Curve",
   "NickName": "corridor",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      149,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "corridor",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 135,
   "Name": "Curve Proximity",
   "NickName": "CrvProx",
   "Description": "Find the pair of closest points between two curves.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      136,
      0
     ]
    ],
    [
     [
      134,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Curve"
    },
    {
     "NickName": "B",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "A",
     "TypeName": "Point"
    },
    {
     "NickName": "B",
     "TypeName": "Point"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 136,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      133,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 137,
   "Name": "Smaller Than",
   "NickName": "Smaller",
   "Description": "Smaller than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      135,
      2
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003C",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003C=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 138,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      134,
      0
     ]
    ],
    [
     [
      137,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 139,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 140,
   "Name": "Curve",
   "NickName": "living room",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      124,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "living room",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 141,
   "Name": "Curve Proximity",
   "NickName": "CrvProx",
   "Description": "Find the pair of closest points between two curves.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      136,
      0
     ]
    ],
    [
     [
      140,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Curve"
    },
    {
     "NickName": "B",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "A",
     "TypeName": "Point"
    },
    {
     "NickName": "B",
     "TypeName": "Point"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 142,
   "Name": "Smaller Than",
   "NickName": "Smaller",
   "Description": "Smaller than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      141,
      2
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003C",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003C=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 143,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      140,
      0
     ]
    ],
    [
     [
      142,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 144,
   "Name": "Null Item",
   "NickName": "Null",
   "Description": "Test a data item for null or invalidity",
   "IsComponent": true,
   "Inputs": [
    [
     [
      138,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "I",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "N",
     "TypeName": "Boolean"
    },
    {
     "NickName": "X",
     "TypeName": "Boolean"
    },
    {
     "NickName": "D",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 145,
   "Name": "Dispatch",
   "NickName": "Dispatch",
   "Description": "Dispatch the items in a list into two target lists.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      138,
      0
     ]
    ],
    [
     [
      144,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 146,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      144,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 147,
   "Name": "Merge",
   "NickName": "Merge",
   "Description": "Merge a bunch of data streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      145,
      1
     ]
    ],
    [
     [
      148,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "D1",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D2",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D3",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 148,
   "Name": "Dispatch",
   "NickName": "Dispatch",
   "Description": "Dispatch the items in a list into two target lists.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      143,
      0
     ]
    ],
    [
     [
      144,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 149,
   "Name": "Curve",
   "NickName": "Corridor",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      14,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "Corridor",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 150,
   "Name": "Curve",
   "NickName": "door TO",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      136,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "door TO",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 151,
   "Name": "Curve",
   "NickName": "door FROM",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      147,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "door FROM",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 152,
   "Name": "Curve",
   "NickName": "Bedroom",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      122,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "Bedroom",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 153,
   "Name": "Merge",
   "NickName": "Merge",
   "Description": "Merge a bunch of data streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      171,
      0
     ]
    ],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "D1",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D2",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D3",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 154,
   "Name": "Curve",
   "NickName": "corridor",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      149,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "corridor",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 155,
   "Name": "Curve Proximity",
   "NickName": "CrvProx",
   "Description": "Find the pair of closest points between two curves.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      156,
      0
     ]
    ],
    [
     [
      154,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Curve"
    },
    {
     "NickName": "B",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "A",
     "TypeName": "Point"
    },
    {
     "NickName": "B",
     "TypeName": "Point"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 156,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      153,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 157,
   "Name": "Smaller Than",
   "NickName": "Smaller",
   "Description": "Smaller than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      155,
      2
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003C",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003C=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 158,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      154,
      0
     ]
    ],
    [
     [
      157,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 159,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 160,
   "Name": "Curve",
   "NickName": "staircase",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      124,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "staircase",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 161,
   "Name": "Curve Proximity",
   "NickName": "CrvProx",
   "Description": "Find the pair of closest points between two curves.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      156,
      0
     ]
    ],
    [
     [
      160,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Curve"
    },
    {
     "NickName": "B",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "A",
     "TypeName": "Point"
    },
    {
     "NickName": "B",
     "TypeName": "Point"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 162,
   "Name": "Smaller Than",
   "NickName": "Smaller",
   "Description": "Smaller than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      161,
      2
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003C",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003C=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 163,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      160,
      0
     ]
    ],
    [
     [
      162,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 164,
   "Name": "Null Item",
   "NickName": "Null",
   "Description": "Test a data item for null or invalidity",
   "IsComponent": true,
   "Inputs": [
    [
     [
      158,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "I",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "N",
     "TypeName": "Boolean"
    },
    {
     "NickName": "X",
     "TypeName": "Boolean"
    },
    {
     "NickName": "D",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 165,
   "Name": "Dispatch",
   "NickName": "Dispatch",
   "Description": "Dispatch the items in a list into two target lists.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      158,
      0
     ]
    ],
    [
     [
      164,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 166,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      164,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 167,
   "Name": "Merge",
   "NickName": "Merge",
   "Description": "Merge a bunch of data streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      165,
      1
     ]
    ],
    [
     [
      168,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "D1",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D2",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D3",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 168,
   "Name": "Dispatch",
   "NickName": "Dispatch",
   "Description": "Dispatch the items in a list into two target lists.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      163,
      0
     ]
    ],
    [
     [
      164,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 169,
   "Name": "Curve",
   "NickName": "door TO",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      156,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "door TO",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 170,
   "Name": "Curve",
   "NickName": "door FROM",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      167,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "door FROM",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 171,
   "Name": "Curve",
   "NickName": "Living",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      124,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "Living",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 172,
   "Name": "Curve",
   "NickName": "Kitchen",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      125,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "Kitchen",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 173,
   "Name": "Curve",
   "NickName": "Staircase",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      11,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "Staircase",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 174,
   "Name": "Entwine",
   "NickName": "Entwine",
   "Description": "Flatten and combine a collection of data streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      150,
      0
     ]
    ],
    [
     [
      169,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "{0;0}",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "{0;1}",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "{0;2}",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 175,
   "Name": "Entwine",
   "NickName": "Entwine",
   "Description": "Flatten and combine a collection of data streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      151,
      0
     ]
    ],
    [
     [
      170,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "{0;0}",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "{0;1}",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "{0;2}",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 176,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      174,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 177,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      175,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 178,
   "Name": "Curve",
   "NickName": "door TO",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      176,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "door TO",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 179,
   "Name": "Curve",
   "NickName": "door FROM",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      177,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "door FROM",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 180,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 181,
   "Name": "Explode",
   "NickName": "Explode",
   "Description": "Explode a curve into smaller segments.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      179,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "R",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "S",
     "TypeName": "Curve"
    },
    {
     "NickName": "V",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 182,
   "Name": "Curve Closest Point",
   "NickName": "Crv CP",
   "Description": "Find the closest point on a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      181,
      1
     ]
    ],
    [
     [
      179,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "t",
     "TypeName": "Number"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 183,
   "Name": "Evaluate Curve",
   "NickName": "Eval",
   "Description": "Evaluate a curve at the specified parameter.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      179,
      0
     ]
    ],
    [
     [
      182,
      1
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "t",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "T",
     "TypeName": "Vector"
    },
    {
     "NickName": "A",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 184,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      185,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 185,
   "Name": "Degrees",
   "NickName": "Deg",
   "Description": "Convert an angle specified in radians to degrees",
   "IsComponent": true,
   "Inputs": [
    [
     [
      183,
      2
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "R",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 186,
   "Name": "Smaller Than",
   "NickName": "Smaller",
   "Description": "Smaller than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      185,
      0
     ]
    ],
    [
     [
      187,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003C",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003C=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 187,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 188,
   "Name": "Dispatch",
   "NickName": "Dispatch",
   "Description": "Dispatch the items in a list into two target lists.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      181,
      1
     ]
    ],
    [
     [
      186,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 189,
   "Name": "PolyLine",
   "NickName": "PLine",
   "Description": "Create a polyline connecting a number of points.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      188,
      1
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "V",
     "TypeName": "Point"
    },
    {
     "NickName": "C",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "Pl",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 190,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 191,
   "Name": "Curve",
   "NickName": "Bathroom",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      126,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "Bathroom",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 192,
   "Name": "Curve",
   "NickName": "door TO",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      203,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "door TO",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 193,
   "Name": "Curve",
   "NickName": "door FROM",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      189,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "door FROM",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 194,
   "Name": "Explode",
   "NickName": "Explode",
   "Description": "Explode a curve into smaller segments.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      192,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "R",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "S",
     "TypeName": "Curve"
    },
    {
     "NickName": "V",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 195,
   "Name": "Explode",
   "NickName": "Explode",
   "Description": "Explode a curve into smaller segments.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      178,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "R",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "S",
     "TypeName": "Curve"
    },
    {
     "NickName": "V",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 196,
   "Name": "Curve Closest Point",
   "NickName": "Crv CP",
   "Description": "Find the closest point on a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      195,
      1
     ]
    ],
    [
     [
      178,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "t",
     "TypeName": "Number"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 197,
   "Name": "Evaluate Curve",
   "NickName": "Eval",
   "Description": "Evaluate a curve at the specified parameter.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      178,
      0
     ]
    ],
    [
     [
      196,
      1
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "t",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "T",
     "TypeName": "Vector"
    },
    {
     "NickName": "A",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 198,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      199,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 199,
   "Name": "Degrees",
   "NickName": "Deg",
   "Description": "Convert an angle specified in radians to degrees",
   "IsComponent": true,
   "Inputs": [
    [
     [
      197,
      2
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "R",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 200,
   "Name": "Smaller Than",
   "NickName": "Smaller",
   "Description": "Smaller than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      199,
      0
     ]
    ],
    [
     [
      201,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003C",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003C=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 201,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 202,
   "Name": "Dispatch",
   "NickName": "Dispatch",
   "Description": "Dispatch the items in a list into two target lists.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      195,
      1
     ]
    ],
    [
     [
      200,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 203,
   "Name": "PolyLine",
   "NickName": "PLine",
   "Description": "Create a polyline connecting a number of points.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      202,
      1
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "V",
     "TypeName": "Point"
    },
    {
     "NickName": "C",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "Pl",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 204,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 205,
   "Name": "Extend Curve",
   "NickName": "Ext",
   "Description": "Extend a curve by a specified distance.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      194,
      0
     ]
    ],
    [],
    [
     [
      206,
      0
     ]
    ],
    [
     [
      206,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "T",
     "TypeName": "Integer"
    },
    {
     "NickName": "L0",
     "TypeName": "Number"
    },
    {
     "NickName": "L1",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 206,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 207,
   "Name": "Curve Proximity",
   "NickName": "CrvProx",
   "Description": "Find the pair of closest points between two curves.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      205,
      0
     ]
    ],
    [
     [
      193,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Curve"
    },
    {
     "NickName": "B",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "A",
     "TypeName": "Point"
    },
    {
     "NickName": "B",
     "TypeName": "Point"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 208,
   "Name": "Smaller Than",
   "NickName": "Smaller",
   "Description": "Smaller than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      207,
      2
     ]
    ],
    [
     [
      209,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003C",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003C=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 209,
   "Name": "Absolute",
   "NickName": "Abs",
   "Description": "Compute the absolute of a value.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      213,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "x",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "y",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 210,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      194,
      0
     ]
    ],
    [
     [
      208,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 211,
   "Name": "Explode",
   "NickName": "Explode",
   "Description": "Explode a curve into smaller segments.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      193,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "R",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "S",
     "TypeName": "Curve"
    },
    {
     "NickName": "V",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 212,
   "Name": "Curve",
   "NickName": "segment possible",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      210,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "segment possible",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 213,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 214,
   "Name": "Curve Closest Point",
   "NickName": "Crv CP",
   "Description": "Find the closest point on a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      211,
      1
     ]
    ],
    [
     [
      217,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "t",
     "TypeName": "Number"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 215,
   "Name": "Join Curves",
   "NickName": "Join",
   "Description": "Join as many curves as possible",
   "IsComponent": true,
   "Inputs": [
    [
     [
      212,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 216,
   "Name": "Sort List",
   "NickName": "Sort",
   "Description": "Sort a list of numeric keys.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      215,
      0
     ]
    ],
    [
     [
      215,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 217,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      216,
      1
     ]
    ],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 218,
   "Name": "Shatter",
   "NickName": "Shatter",
   "Description": "Shatter a curve into segments.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      217,
      0
     ]
    ],
    [
     [
      214,
      1
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "t",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "S",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 219,
   "Name": "Point On Curve",
   "NickName": "CurvePoint",
   "Description": "Evaluates a curve at a specific location",
   "IsComponent": false,
   "Inputs": [
    [
     [
      218,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Point"
    }
   ],
   "Outputs": [
    {
     "NickName": "CurvePoint",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 220,
   "Name": "Curve Closest Point",
   "NickName": "Crv CP",
   "Description": "Find the closest point on a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      219,
      0
     ]
    ],
    [
     [
      193,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "t",
     "TypeName": "Number"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 221,
   "Name": "Smaller Than",
   "NickName": "Smaller",
   "Description": "Smaller than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      220,
      2
     ]
    ],
    [
     [
      222,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003C",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003C=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 222,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 223,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      218,
      0
     ]
    ],
    [
     [
      221,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 224,
   "Name": "Sort List",
   "NickName": "Sort",
   "Description": "Sort a list of numeric keys.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      227,
      0
     ]
    ],
    [
     [
      227,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 225,
   "Name": "Curve",
   "NickName": "intersection segment to place the door at",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      223,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "intersection segment to place the door at",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 226,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 227,
   "Name": "Curve",
   "NickName": "intersection segment to place the door at",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      225,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "intersection segment to place the door at",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 228,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      224,
      1
     ]
    ],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 229,
   "Name": "End Points",
   "NickName": "End",
   "Description": "Extract the end points of a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      228,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "S",
     "TypeName": "Point"
    },
    {
     "NickName": "E",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 230,
   "Name": "Curve",
   "NickName": "door TO",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      192,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "door TO",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 231,
   "Name": "Explode",
   "NickName": "Explode",
   "Description": "Explode a curve into smaller segments.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      230,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "R",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "S",
     "TypeName": "Curve"
    },
    {
     "NickName": "V",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 232,
   "Name": "Distance",
   "NickName": "Dist",
   "Description": "Compute Euclidean distance between two point coordinates.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      229,
      0
     ]
    ],
    [
     [
      231,
      1
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Point"
    },
    {
     "NickName": "B",
     "TypeName": "Point"
    }
   ],
   "Outputs": [
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 233,
   "Name": "Distance",
   "NickName": "Dist",
   "Description": "Compute Euclidean distance between two point coordinates.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      229,
      1
     ]
    ],
    [
     [
      231,
      1
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Point"
    },
    {
     "NickName": "B",
     "TypeName": "Point"
    }
   ],
   "Outputs": [
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 234,
   "Name": "Merge",
   "NickName": "Merge",
   "Description": "Merge a bunch of data streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      241,
      0
     ]
    ],
    [
     [
      243,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "D1",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D2",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D3",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 235,
   "Name": "Sort List",
   "NickName": "Sort",
   "Description": "Sort a list of numeric keys.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      234,
      0
     ]
    ],
    [
     [
      236,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 236,
   "Name": "Merge",
   "NickName": "Merge",
   "Description": "Merge a bunch of data streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      229,
      0
     ]
    ],
    [
     [
      229,
      1
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "D1",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D2",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D3",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 237,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      235,
      1
     ]
    ],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "\u002B1",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 238,
   "Name": "Point",
   "NickName": "Pt",
   "Description": "Contains a collection of three-dimensional points",
   "IsComponent": false,
   "Inputs": [
    [
     [
      237,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Point"
    }
   ],
   "Outputs": [
    {
     "NickName": "Pt",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 239,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      231,
      1
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 240,
   "Name": "Sort List",
   "NickName": "Sort",
   "Description": "Sort a list of numeric keys.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      232,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 241,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      240,
      0
     ]
    ],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 242,
   "Name": "Sort List",
   "NickName": "Sort",
   "Description": "Sort a list of numeric keys.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      233,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 243,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      242,
      0
     ]
    ],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 244,
   "Name": "Point",
   "NickName": "Pt",
   "Description": "Contains a collection of three-dimensional points",
   "IsComponent": false,
   "Inputs": [
    [
     [
      237,
      1
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Point"
    }
   ],
   "Outputs": [
    {
     "NickName": "Pt",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 245,
   "Name": "Move",
   "NickName": "Move",
   "Description": "Translate (move) an object along a vector.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      238,
      0
     ]
    ],
    [
     [
      246,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Geometry"
    },
    {
     "NickName": "T",
     "TypeName": "Vector"
    }
   ],
   "Outputs": [
    {
     "NickName": "G",
     "TypeName": "Geometry"
    },
    {
     "NickName": "X",
     "TypeName": "Transform"
    }
   ]
  },
  {
   "Id": 246,
   "Name": "Amplitude",
   "NickName": "Amp",
   "Description": "Set the amplitude (length) of a vector.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      247,
      0
     ]
    ],
    [
     [
      248,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "V",
     "TypeName": "Vector"
    },
    {
     "NickName": "A",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "V",
     "TypeName": "Vector"
    }
   ]
  },
  {
   "Id": 247,
   "Name": "Vector 2Pt",
   "NickName": "Vec2Pt",
   "Description": "Create a vector between two points.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      238,
      0
     ]
    ],
    [
     [
      244,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Point"
    },
    {
     "NickName": "B",
     "TypeName": "Point"
    },
    {
     "NickName": "U",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "V",
     "TypeName": "Vector"
    },
    {
     "NickName": "L",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 248,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 249,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 250,
   "Name": "Point",
   "NickName": "Pt",
   "Description": "Contains a collection of three-dimensional points",
   "IsComponent": false,
   "Inputs": [
    [
     [
      245,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Point"
    }
   ],
   "Outputs": [
    {
     "NickName": "Pt",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 251,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 252,
   "Name": "Point",
   "NickName": "Doors",
   "Description": "Contains a collection of three-dimensional points",
   "IsComponent": false,
   "Inputs": [
    [
     [
      250,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Point"
    }
   ],
   "Outputs": [
    {
     "NickName": "Doors",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 253,
   "Name": "Cluster",
   "NickName": "simplify",
   "Description": "Contains a cluster of Grasshopper components",
   "IsComponent": true,
   "Inputs": [
    [
     [
      122,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "CRV",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "CRV",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 254,
   "Name": "Curve",
   "NickName": "room",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      80,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 255,
   "Name": "Area",
   "NickName": "Area",
   "Description": "Solve area properties for breps, meshes and planar closed curves.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      254,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Geometry"
    }
   ],
   "Outputs": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "C",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 256,
   "Name": "Point",
   "NickName": "Pt door",
   "Description": "Contains a collection of three-dimensional points",
   "IsComponent": false,
   "Inputs": [
    [
     [
      252,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Point"
    }
   ],
   "Outputs": [
    {
     "NickName": "Pt door",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 257,
   "Name": "Rectangle",
   "NickName": "Rectangle",
   "Description": "Create a rectangle on a plane",
   "IsComponent": true,
   "Inputs": [
    [
     [
      277,
      0
     ]
    ],
    [
     [
      276,
      0
     ]
    ],
    [
     [
      276,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "P",
     "TypeName": "Plane"
    },
    {
     "NickName": "X",
     "TypeName": "Domain"
    },
    {
     "NickName": "Y",
     "TypeName": "Domain"
    },
    {
     "NickName": "R",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "L",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 258,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 259,
   "Name": "Explode",
   "NickName": "Explode",
   "Description": "Explode a curve into smaller segments.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      254,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "R",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "S",
     "TypeName": "Curve"
    },
    {
     "NickName": "V",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 260,
   "Name": "Curve Closest Point",
   "NickName": "Crv CP",
   "Description": "Find the closest point on a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      273,
      0
     ]
    ],
    [
     [
      259,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "t",
     "TypeName": "Number"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 261,
   "Name": "Sort List",
   "NickName": "Sort",
   "Description": "Sort a list of numeric keys.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      260,
      2
     ]
    ],
    [
     [
      259,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 262,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      261,
      1
     ]
    ],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 263,
   "Name": "Curve Closest Point",
   "NickName": "Crv CP",
   "Description": "Find the closest point on a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      255,
      1
     ]
    ],
    [
     [
      262,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "t",
     "TypeName": "Number"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 264,
   "Name": "Line",
   "NickName": "Ln",
   "Description": "Create a line between two points.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      255,
      1
     ]
    ],
    [
     [
      263,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Point"
    },
    {
     "NickName": "B",
     "TypeName": "Point"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Line"
    }
   ]
  },
  {
   "Id": 265,
   "Name": "Move",
   "NickName": "Move",
   "Description": "Translate (move) an object along a vector.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      257,
      0
     ]
    ],
    [
     [
      268,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Geometry"
    },
    {
     "NickName": "T",
     "TypeName": "Vector"
    }
   ],
   "Outputs": [
    {
     "NickName": "G",
     "TypeName": "Geometry"
    },
    {
     "NickName": "X",
     "TypeName": "Transform"
    }
   ]
  },
  {
   "Id": 266,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 267,
   "Name": "Amplitude",
   "NickName": "Amp",
   "Description": "Set the amplitude (length) of a vector.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      264,
      0
     ]
    ],
    [
     [
      266,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "V",
     "TypeName": "Vector"
    },
    {
     "NickName": "A",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "V",
     "TypeName": "Vector"
    }
   ]
  },
  {
   "Id": 268,
   "Name": "Reverse",
   "NickName": "Rev",
   "Description": "Reverse a vector (multiply by -1).",
   "IsComponent": true,
   "Inputs": [
    [
     [
      267,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "V",
     "TypeName": "Vector"
    }
   ],
   "Outputs": [
    {
     "NickName": "V",
     "TypeName": "Vector"
    }
   ]
  },
  {
   "Id": 269,
   "Name": "Curve",
   "NickName": "door area",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      265,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "door area",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 270,
   "Name": "Flatten Tree",
   "NickName": "Flatten",
   "Description": "Flatten a data tree by removing all branching information.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      256,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Path"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 271,
   "Name": "Curve Closest Point",
   "NickName": "Crv CP",
   "Description": "Find the closest point on a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      270,
      0
     ]
    ],
    [
     [
      254,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "t",
     "TypeName": "Number"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 272,
   "Name": "Smaller Than",
   "NickName": "Smaller",
   "Description": "Smaller than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      271,
      2
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003C",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003C=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 273,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      270,
      0
     ]
    ],
    [
     [
      272,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 274,
   "Name": "Number",
   "NickName": "door width/2",
   "Description": "Contains a collection of floating point numbers",
   "IsComponent": false,
   "Inputs": [
    [
     [
      119,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "door width/2",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 275,
   "Name": "Negative",
   "NickName": "Neg",
   "Description": "Compute the negative of a value.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      274,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "x",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "y",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 276,
   "Name": "Construct Domain",
   "NickName": "Dom",
   "Description": "Create a numeric domain from two numeric extremes.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      275,
      0
     ]
    ],
    [
     [
      274,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "I",
     "TypeName": "Domain"
    }
   ]
  },
  {
   "Id": 277,
   "Name": "Construct Plane",
   "NickName": "Pl",
   "Description": "Construct a plane from an origin point and {x}, {y} axes.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      273,
      0
     ]
    ],
    [
     [
      262,
      0
     ]
    ],
    [
     [
      268,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "O",
     "TypeName": "Point"
    },
    {
     "NickName": "X",
     "TypeName": "Vector"
    },
    {
     "NickName": "Y",
     "TypeName": "Vector"
    }
   ],
   "Outputs": [
    {
     "NickName": "Pl",
     "TypeName": "Plane"
    }
   ]
  },
  {
   "Id": 278,
   "Name": "Data",
   "NickName": "Bedroo Data",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "Bedroo Data",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 279,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 280,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 281,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 282,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 283,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 284,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 285,
   "Name": "List Item",
   "NickName": "guideline",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      287,
      0
     ]
    ],
    [
     [
      286,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 286,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 287,
   "Name": "Data",
   "NickName": "Furniture piece",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      94,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "Furniture piece",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 288,
   "Name": "List Item",
   "NickName": "small rectangle",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      287,
      0
     ]
    ],
    [
     [
      289,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 289,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 290,
   "Name": "List Item",
   "NickName": "big rectangle",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      287,
      0
     ]
    ],
    [
     [
      291,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 291,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 292,
   "Name": "Curve",
   "NickName": "wall crv",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      285,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "wall crv",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 293,
   "Name": "Curve",
   "NickName": "big_bb",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      290,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "big_bb",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 294,
   "Name": "Curve",
   "NickName": "small_bb",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      288,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "small_bb",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 295,
   "Name": "List Item",
   "NickName": "details",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      287,
      0
     ]
    ],
    [
     [
      296,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 296,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 297,
   "Name": "Geometry",
   "NickName": "detsils",
   "Description": "Contains a collection of generic geometry",
   "IsComponent": false,
   "Inputs": [
    [
     [
      295,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Geometry"
    }
   ],
   "Outputs": [
    {
     "NickName": "detsils",
     "TypeName": "Geometry"
    }
   ]
  },
  {
   "Id": 298,
   "Name": "Curve",
   "NickName": "room_full",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      86,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room_full",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 299,
   "Name": "Curve",
   "NickName": "room_rdc",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      85,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room_rdc",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 300,
   "Name": "Curve",
   "NickName": "wall crv",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      292,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "wall crv",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 301,
   "Name": "Curve",
   "NickName": "big_bb",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      293,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "big_bb",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 302,
   "Name": "Curve",
   "NickName": "small_bb",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      294,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "small_bb",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 303,
   "Name": "Length",
   "NickName": "Len",
   "Description": "Measure the length of a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      486,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 304,
   "Name": "Length",
   "NickName": "Len",
   "Description": "Measure the length of a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      473,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 305,
   "Name": "Larger Than",
   "NickName": "Larger",
   "Description": "Larger than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      303,
      0
     ]
    ],
    [
     [
      324,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003E=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 306,
   "Name": "Offset Curve",
   "NickName": "Offset",
   "Description": "Offset a curve with a specified distance.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      333,
      0
     ]
    ],
    [
     [
      307,
      0
     ]
    ],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    },
    {
     "NickName": "P",
     "TypeName": "Plane"
    },
    {
     "NickName": "C",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 307,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 308,
   "Name": "Extend Curve",
   "NickName": "Ext",
   "Description": "Extend a curve by a specified distance.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      306,
      0
     ]
    ],
    [],
    [
     [
      309,
      0
     ]
    ],
    [
     [
      309,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "T",
     "TypeName": "Integer"
    },
    {
     "NickName": "L0",
     "TypeName": "Number"
    },
    {
     "NickName": "L1",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 309,
   "Name": "Multiplication",
   "NickName": "A\u00D7B",
   "Description": "Mathematical multiplication",
   "IsComponent": true,
   "Inputs": [
    [
     [
      307,
      0
     ]
    ],
    [
     [
      430,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 310,
   "Name": "Explode",
   "NickName": "Explode",
   "Description": "Explode a curve into smaller segments.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      565,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "R",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "S",
     "TypeName": "Curve"
    },
    {
     "NickName": "V",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 311,
   "Name": "Explode",
   "NickName": "Explode",
   "Description": "Explode a curve into smaller segments.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      568,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "R",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "S",
     "TypeName": "Curve"
    },
    {
     "NickName": "V",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 312,
   "Name": "Number",
   "NickName": "depth_full",
   "Description": "Contains a collection of floating point numbers",
   "IsComponent": false,
   "Inputs": [
    [
     [
      314,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "depth_full",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 313,
   "Name": "Number",
   "NickName": "depth_rdc",
   "Description": "Contains a collection of floating point numbers",
   "IsComponent": false,
   "Inputs": [
    [
     [
      315,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "depth_rdc",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 314,
   "Name": "Length",
   "NickName": "Len",
   "Description": "Measure the length of a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      490,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 315,
   "Name": "Length",
   "NickName": "Len",
   "Description": "Measure the length of a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      478,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 316,
   "Name": "Point On Curve",
   "NickName": "CurvePoint",
   "Description": "Evaluates a curve at a specific location",
   "IsComponent": false,
   "Inputs": [
    [
     [
      333,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Point"
    }
   ],
   "Outputs": [
    {
     "NickName": "CurvePoint",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 317,
   "Name": "Curve Closest Point",
   "NickName": "Crv CP",
   "Description": "Find the closest point on a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      316,
      0
     ]
    ],
    [
     [
      306,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "t",
     "TypeName": "Number"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 318,
   "Name": "Line SDL",
   "NickName": "Line",
   "Description": "Create a line segment defined by start point, tangent and length.}",
   "IsComponent": true,
   "Inputs": [
    [
     [
      346,
      0
     ]
    ],
    [
     [
      319,
      0
     ]
    ],
    [
     [
      325,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "S",
     "TypeName": "Point"
    },
    {
     "NickName": "D",
     "TypeName": "Vector"
    },
    {
     "NickName": "L",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Line"
    }
   ]
  },
  {
   "Id": 319,
   "Name": "Vector 2Pt",
   "NickName": "Vec2Pt",
   "Description": "Create a vector between two points.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      316,
      0
     ]
    ],
    [
     [
      317,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Point"
    },
    {
     "NickName": "B",
     "TypeName": "Point"
    },
    {
     "NickName": "U",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "V",
     "TypeName": "Vector"
    },
    {
     "NickName": "L",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 320,
   "Name": "Collision One|Many",
   "NickName": "ColOM",
   "Description": "Test for one|many collision between objects",
   "IsComponent": true,
   "Inputs": [
    [
     [
      318,
      0
     ]
    ],
    [
     [
      321,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Geometry"
    },
    {
     "NickName": "O",
     "TypeName": "Geometry"
    }
   ],
   "Outputs": [
    {
     "NickName": "C",
     "TypeName": "Boolean"
    },
    {
     "NickName": "I",
     "TypeName": "Integer"
    }
   ]
  },
  {
   "Id": 321,
   "Name": "Curve",
   "NickName": "room_full",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      518,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room_full",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 322,
   "Name": "Gate Not",
   "NickName": "Not",
   "Description": "Perform boolean negation (NOT gate).",
   "IsComponent": true,
   "Inputs": [
    [
     [
      320,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 323,
   "Name": "Number",
   "NickName": "width",
   "Description": "Contains a collection of floating point numbers",
   "IsComponent": false,
   "Inputs": [
    [
     [
      304,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "width",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 324,
   "Name": "Number",
   "NickName": "width",
   "Description": "Contains a collection of floating point numbers",
   "IsComponent": false,
   "Inputs": [
    [
     [
      323,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "width",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 325,
   "Name": "Number",
   "NickName": "depth_full",
   "Description": "Contains a collection of floating point numbers",
   "IsComponent": false,
   "Inputs": [
    [
     [
      516,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "depth_full",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 326,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      486,
      0
     ]
    ],
    [
     [
      305,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 327,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 328,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 329,
   "Name": "Explode",
   "NickName": "Explode",
   "Description": "Explode a curve into smaller segments.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      293,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "R",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "S",
     "TypeName": "Curve"
    },
    {
     "NickName": "V",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 330,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      329,
      0
     ]
    ],
    [
     [
      472,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 331,
   "Name": "Curve",
   "NickName": "walls long enough",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      326,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "walls long enough",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 332,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 333,
   "Name": "Curve",
   "NickName": "walls long enough",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      499,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "walls long enough",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 334,
   "Name": "Series",
   "NickName": "Series",
   "Description": "Create a series of numbers.",
   "IsComponent": true,
   "Inputs": [
    [],
    [
     [
      831,
      0
     ]
    ],
    [
     [
      335,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "S",
     "TypeName": "Number"
    },
    {
     "NickName": "N",
     "TypeName": "Number"
    },
    {
     "NickName": "C",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "S",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 335,
   "Name": "Number Slider",
   "NickName": "subdivs count",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "subdivs count",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 336,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 337,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 338,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 339,
   "Name": "Number",
   "NickName": "depth_rdc",
   "Description": "Contains a collection of floating point numbers",
   "IsComponent": false,
   "Inputs": [
    [
     [
      517,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "depth_rdc",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 340,
   "Name": "Line SDL",
   "NickName": "Line",
   "Description": "Create a line segment defined by start point, tangent and length.}",
   "IsComponent": true,
   "Inputs": [
    [
     [
      346,
      0
     ]
    ],
    [
     [
      319,
      0
     ]
    ],
    [
     [
      339,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "S",
     "TypeName": "Point"
    },
    {
     "NickName": "D",
     "TypeName": "Vector"
    },
    {
     "NickName": "L",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Line"
    }
   ]
  },
  {
   "Id": 341,
   "Name": "Curve",
   "NickName": "room_rdc",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      527,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room_rdc",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 342,
   "Name": "Collision One|Many",
   "NickName": "ColOM",
   "Description": "Test for one|many collision between objects",
   "IsComponent": true,
   "Inputs": [
    [
     [
      340,
      0
     ]
    ],
    [
     [
      341,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Geometry"
    },
    {
     "NickName": "O",
     "TypeName": "Geometry"
    }
   ],
   "Outputs": [
    {
     "NickName": "C",
     "TypeName": "Boolean"
    },
    {
     "NickName": "I",
     "TypeName": "Integer"
    }
   ]
  },
  {
   "Id": 343,
   "Name": "Gate Not",
   "NickName": "Not",
   "Description": "Perform boolean negation (NOT gate).",
   "IsComponent": true,
   "Inputs": [
    [
     [
      342,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 344,
   "Name": "Shatter",
   "NickName": "Shatter",
   "Description": "Shatter a curve into segments.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      308,
      0
     ]
    ],
    [
     [
      334,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "t",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "S",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 345,
   "Name": "Length",
   "NickName": "Len",
   "Description": "Measure the length of a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      344,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 346,
   "Name": "Point On Curve",
   "NickName": "CurvePoint",
   "Description": "Evaluates a curve at a specific location",
   "IsComponent": false,
   "Inputs": [
    [
     [
      344,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Point"
    }
   ],
   "Outputs": [
    {
     "NickName": "CurvePoint",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 347,
   "Name": "Number",
   "NickName": "width_rdc",
   "Description": "Contains a collection of floating point numbers",
   "IsComponent": false,
   "Inputs": [
    [
     [
      348,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "width_rdc",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 348,
   "Name": "Length",
   "NickName": "Len",
   "Description": "Measure the length of a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      358,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 349,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      344,
      0
     ]
    ],
    [
     [
      322,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 350,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      344,
      0
     ]
    ],
    [
     [
      343,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 351,
   "Name": "Join Curves",
   "NickName": "Join",
   "Description": "Join as many curves as possible",
   "IsComponent": true,
   "Inputs": [
    [
     [
      380,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 352,
   "Name": "Sort List",
   "NickName": "Sort",
   "Description": "Sort a list of numeric keys.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      351,
      0
     ]
    ],
    [
     [
      351,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 353,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      352,
      1
     ]
    ],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 354,
   "Name": "Join Curves",
   "NickName": "Join",
   "Description": "Join as many curves as possible",
   "IsComponent": true,
   "Inputs": [
    [
     [
      381,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 355,
   "Name": "Sort List",
   "NickName": "Sort",
   "Description": "Sort a list of numeric keys.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      354,
      0
     ]
    ],
    [
     [
      354,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 356,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      355,
      1
     ]
    ],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 357,
   "Name": "Curve",
   "NickName": "Crv width full",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      475,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "Crv width full",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 358,
   "Name": "Curve",
   "NickName": "Crv width rdc",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      477,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "Crv width rdc",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 359,
   "Name": "Point On Curve",
   "NickName": "CurvePoint",
   "Description": "Evaluates a curve at a specific location",
   "IsComponent": false,
   "Inputs": [
    [
     [
      310,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Point"
    }
   ],
   "Outputs": [
    {
     "NickName": "CurvePoint",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 360,
   "Name": "Sort List",
   "NickName": "Sort",
   "Description": "Sort a list of numeric keys.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      461,
      2
     ]
    ],
    [
     [
      310,
      0
     ]
    ],
    [
     [
      570,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 361,
   "Name": "Point On Curve",
   "NickName": "CurvePoint",
   "Description": "Evaluates a curve at a specific location",
   "IsComponent": false,
   "Inputs": [
    [
     [
      311,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Point"
    }
   ],
   "Outputs": [
    {
     "NickName": "CurvePoint",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 362,
   "Name": "Sort List",
   "NickName": "Sort",
   "Description": "Sort a list of numeric keys.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      462,
      2
     ]
    ],
    [
     [
      311,
      0
     ]
    ],
    [
     [
      570,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 363,
   "Name": "Curve",
   "NickName": "Crv width full",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      530,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "Crv width full",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 364,
   "Name": "Curve",
   "NickName": "Crv width rdc",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      531,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "Crv width rdc",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 365,
   "Name": "End Points",
   "NickName": "End",
   "Description": "Extract the end points of a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      353,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "S",
     "TypeName": "Point"
    },
    {
     "NickName": "E",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 366,
   "Name": "Flip Curve",
   "NickName": "Flip",
   "Description": "Flip a curve using an optional guide curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      363,
      0
     ]
    ],
    [
     [
      778,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "G",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "F",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 367,
   "Name": "Flip Curve",
   "NickName": "Flip",
   "Description": "Flip a curve using an optional guide curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      364,
      0
     ]
    ],
    [
     [
      778,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "G",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "F",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 368,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 369,
   "Name": "End Points",
   "NickName": "End",
   "Description": "Extract the end points of a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      366,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "S",
     "TypeName": "Point"
    },
    {
     "NickName": "E",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 370,
   "Name": "Subtraction",
   "NickName": "A-B",
   "Description": "Mathematical subtraction",
   "IsComponent": true,
   "Inputs": [
    [
     [
      390,
      2
     ]
    ],
    [
     [
      391,
      2
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 371,
   "Name": "Larger Than",
   "NickName": "Larger",
   "Description": "Larger than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      370,
      0
     ]
    ],
    [
     [
      372,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003E=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 372,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 373,
   "Name": "Dispatch",
   "NickName": "Dispatch",
   "Description": "Dispatch the items in a list into two target lists.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      370,
      0
     ]
    ],
    [
     [
      371,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 374,
   "Name": "Dispatch",
   "NickName": "Dispatch",
   "Description": "Dispatch the items in a list into two target lists.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      372,
      0
     ]
    ],
    [
     [
      371,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 375,
   "Name": "Merge",
   "NickName": "Merge",
   "Description": "Merge a bunch of data streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      373,
      0
     ]
    ],
    [
     [
      374,
      1
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "D1",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D2",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D3",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 376,
   "Name": "Extend Curve",
   "NickName": "Ext",
   "Description": "Extend a curve by a specified distance.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      353,
      0
     ]
    ],
    [],
    [
     [
      431,
      0
     ]
    ],
    [
     [
      432,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "T",
     "TypeName": "Integer"
    },
    {
     "NickName": "L0",
     "TypeName": "Number"
    },
    {
     "NickName": "L1",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 377,
   "Name": "Curve",
   "NickName": "fitting wall full",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      349,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "fitting wall full",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 378,
   "Name": "Curve",
   "NickName": "fitting wall reduced",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      350,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "fitting wall reduced",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 379,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 380,
   "Name": "Curve",
   "NickName": "fitting wall full",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      377,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "fitting wall full",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 381,
   "Name": "Curve",
   "NickName": "fitting wall reduced",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      378,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "fitting wall reduced",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 382,
   "Name": "Curve",
   "NickName": "final fitting curve",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      376,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "final fitting curve",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 383,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 384,
   "Name": "Subtraction",
   "NickName": "A-B",
   "Description": "Mathematical subtraction",
   "IsComponent": true,
   "Inputs": [
    [
     [
      393,
      2
     ]
    ],
    [
     [
      394,
      2
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 385,
   "Name": "Larger Than",
   "NickName": "Larger",
   "Description": "Larger than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      384,
      0
     ]
    ],
    [
     [
      386,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003E=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 386,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 387,
   "Name": "Dispatch",
   "NickName": "Dispatch",
   "Description": "Dispatch the items in a list into two target lists.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      384,
      0
     ]
    ],
    [
     [
      385,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 388,
   "Name": "Dispatch",
   "NickName": "Dispatch",
   "Description": "Dispatch the items in a list into two target lists.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      386,
      0
     ]
    ],
    [
     [
      385,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 389,
   "Name": "Merge",
   "NickName": "Merge",
   "Description": "Merge a bunch of data streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      387,
      0
     ]
    ],
    [
     [
      388,
      1
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "D1",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D2",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D3",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 390,
   "Name": "Curve Closest Point",
   "NickName": "Crv CP",
   "Description": "Find the closest point on a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      365,
      0
     ]
    ],
    [
     [
      356,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "t",
     "TypeName": "Number"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 391,
   "Name": "Curve Closest Point",
   "NickName": "Crv CP",
   "Description": "Find the closest point on a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      369,
      0
     ]
    ],
    [
     [
      367,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "t",
     "TypeName": "Number"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 392,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      373,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 393,
   "Name": "Curve Closest Point",
   "NickName": "Crv CP",
   "Description": "Find the closest point on a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      365,
      1
     ]
    ],
    [
     [
      356,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "t",
     "TypeName": "Number"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 394,
   "Name": "Curve Closest Point",
   "NickName": "Crv CP",
   "Description": "Find the closest point on a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      369,
      1
     ]
    ],
    [
     [
      367,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "t",
     "TypeName": "Number"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 395,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 396,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 397,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 398,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 399,
   "Name": "Curve",
   "NickName": "final fitting curve",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      423,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "final fitting curve",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 400,
   "Name": "Vector",
   "NickName": "Vec",
   "Description": "Contains a collection of three-dimensional vectors",
   "IsComponent": false,
   "Inputs": [
    [
     [
      319,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Vector"
    }
   ],
   "Outputs": [
    {
     "NickName": "Vec",
     "TypeName": "Vector"
    }
   ]
  },
  {
   "Id": 401,
   "Name": "Vector",
   "NickName": "Vec",
   "Description": "Contains a collection of three-dimensional vectors",
   "IsComponent": false,
   "Inputs": [
    [
     [
      400,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Vector"
    }
   ],
   "Outputs": [
    {
     "NickName": "Vec",
     "TypeName": "Vector"
    }
   ]
  },
  {
   "Id": 402,
   "Name": "End Points",
   "NickName": "End",
   "Description": "Extract the end points of a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      573,
      1
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "S",
     "TypeName": "Point"
    },
    {
     "NickName": "E",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 403,
   "Name": "Construct Plane",
   "NickName": "Pl",
   "Description": "Construct a plane from an origin point and {x}, {y} axes.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      402,
      0
     ]
    ],
    [
     [
      573,
      1
     ]
    ],
    [
     [
      407,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "O",
     "TypeName": "Point"
    },
    {
     "NickName": "X",
     "TypeName": "Vector"
    },
    {
     "NickName": "Y",
     "TypeName": "Vector"
    }
   ],
   "Outputs": [
    {
     "NickName": "Pl",
     "TypeName": "Plane"
    }
   ]
  },
  {
   "Id": 404,
   "Name": "Geometry",
   "NickName": "detsils",
   "Description": "Contains a collection of generic geometry",
   "IsComponent": false,
   "Inputs": [
    [
     [
      481,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Geometry"
    }
   ],
   "Outputs": [
    {
     "NickName": "detsils",
     "TypeName": "Geometry"
    }
   ]
  },
  {
   "Id": 405,
   "Name": "Area",
   "NickName": "Area",
   "Description": "Solve area properties for breps, meshes and planar closed curves.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      301,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Geometry"
    }
   ],
   "Outputs": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "C",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 406,
   "Name": "Curve Closest Point",
   "NickName": "Crv CP",
   "Description": "Find the closest point on a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      405,
      1
     ]
    ],
    [
     [
      573,
      1
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "t",
     "TypeName": "Number"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 407,
   "Name": "Vector 2Pt",
   "NickName": "Vec2Pt",
   "Description": "Create a vector between two points.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      406,
      0
     ]
    ],
    [
     [
      405,
      1
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Point"
    },
    {
     "NickName": "B",
     "TypeName": "Point"
    },
    {
     "NickName": "U",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "V",
     "TypeName": "Vector"
    },
    {
     "NickName": "L",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 408,
   "Name": "Data",
   "NickName": "plane starting point",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      479,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "plane starting point",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 409,
   "Name": "Construct Plane",
   "NickName": "Pl",
   "Description": "Construct a plane from an origin point and {x}, {y} axes.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      402,
      1
     ]
    ],
    [
     [
      411,
      0
     ]
    ],
    [
     [
      407,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "O",
     "TypeName": "Point"
    },
    {
     "NickName": "X",
     "TypeName": "Vector"
    },
    {
     "NickName": "Y",
     "TypeName": "Vector"
    }
   ],
   "Outputs": [
    {
     "NickName": "Pl",
     "TypeName": "Plane"
    }
   ]
  },
  {
   "Id": 410,
   "Name": "Data",
   "NickName": "plane ending point",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      480,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "plane ending point",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 411,
   "Name": "Reverse",
   "NickName": "Rev",
   "Description": "Reverse a vector (multiply by -1).",
   "IsComponent": true,
   "Inputs": [
    [
     [
      573,
      1
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "V",
     "TypeName": "Vector"
    }
   ],
   "Outputs": [
    {
     "NickName": "V",
     "TypeName": "Vector"
    }
   ]
  },
  {
   "Id": 412,
   "Name": "Data",
   "NickName": "plane starting point",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      561,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "plane starting point",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 413,
   "Name": "Data",
   "NickName": "plane ending point",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      562,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "plane ending point",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 414,
   "Name": "End Points",
   "NickName": "End",
   "Description": "Extract the end points of a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      444,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "S",
     "TypeName": "Point"
    },
    {
     "NickName": "E",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 415,
   "Name": "Reverse",
   "NickName": "Rev",
   "Description": "Reverse a vector (multiply by -1).",
   "IsComponent": true,
   "Inputs": [
    [
     [
      444,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "V",
     "TypeName": "Vector"
    }
   ],
   "Outputs": [
    {
     "NickName": "V",
     "TypeName": "Vector"
    }
   ]
  },
  {
   "Id": 416,
   "Name": "Construct Plane",
   "NickName": "Pl",
   "Description": "Construct a plane from an origin point and {x}, {y} axes.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      414,
      0
     ]
    ],
    [
     [
      444,
      0
     ]
    ],
    [
     [
      427,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "O",
     "TypeName": "Point"
    },
    {
     "NickName": "X",
     "TypeName": "Vector"
    },
    {
     "NickName": "Y",
     "TypeName": "Vector"
    }
   ],
   "Outputs": [
    {
     "NickName": "Pl",
     "TypeName": "Plane"
    }
   ]
  },
  {
   "Id": 417,
   "Name": "Construct Plane",
   "NickName": "Pl",
   "Description": "Construct a plane from an origin point and {x}, {y} axes.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      414,
      1
     ]
    ],
    [
     [
      415,
      0
     ]
    ],
    [
     [
      427,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "O",
     "TypeName": "Point"
    },
    {
     "NickName": "X",
     "TypeName": "Vector"
    },
    {
     "NickName": "Y",
     "TypeName": "Vector"
    }
   ],
   "Outputs": [
    {
     "NickName": "Pl",
     "TypeName": "Plane"
    }
   ]
  },
  {
   "Id": 418,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 419,
   "Name": "Length",
   "NickName": "Len",
   "Description": "Measure the length of a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      424,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 420,
   "Name": "Larger Than",
   "NickName": "Larger",
   "Description": "Larger than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      419,
      0
     ]
    ],
    [
     [
      421,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003E=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 421,
   "Name": "Number",
   "NickName": "width",
   "Description": "Contains a collection of floating point numbers",
   "IsComponent": false,
   "Inputs": [
    [
     [
      535,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "width",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 422,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      424,
      0
     ]
    ],
    [
     [
      420,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 423,
   "Name": "Curve",
   "NickName": "walls long enough",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      422,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "walls long enough",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 424,
   "Name": "Curve",
   "NickName": "final fitting curve",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      382,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "final fitting curve",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 425,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      401,
      0
     ]
    ],
    [
     [
      420,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 426,
   "Name": "Vector",
   "NickName": "Vec",
   "Description": "Contains a collection of three-dimensional vectors",
   "IsComponent": false,
   "Inputs": [
    [
     [
      425,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Vector"
    }
   ],
   "Outputs": [
    {
     "NickName": "Vec",
     "TypeName": "Vector"
    }
   ]
  },
  {
   "Id": 427,
   "Name": "Vector",
   "NickName": "Vec",
   "Description": "Contains a collection of three-dimensional vectors",
   "IsComponent": false,
   "Inputs": [
    [
     [
      426,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Vector"
    }
   ],
   "Outputs": [
    {
     "NickName": "Vec",
     "TypeName": "Vector"
    }
   ]
  },
  {
   "Id": 428,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      420,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 429,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 430,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 431,
   "Name": "Multiplication",
   "NickName": "A\u00D7B",
   "Description": "Mathematical multiplication",
   "IsComponent": true,
   "Inputs": [
    [
     [
      375,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 432,
   "Name": "Multiplication",
   "NickName": "A\u00D7B",
   "Description": "Mathematical multiplication",
   "IsComponent": true,
   "Inputs": [
    [
     [
      389,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 433,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 434,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      431,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 435,
   "Name": "Curve",
   "NickName": "big_bb",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      563,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "big_bb",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 436,
   "Name": "Curve",
   "NickName": "room_full",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      627,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room_full",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 437,
   "Name": "Curve",
   "NickName": "small_bb",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      564,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "small_bb",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 438,
   "Name": "Curve",
   "NickName": "room_rdc",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      649,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room_rdc",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 439,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 440,
   "Name": "Orient",
   "NickName": "big bb",
   "Description": "Orient an object. Orientation is sometimes called a \u0027ChangeBasis tranformation\u0027. It allows for remapping of geometry from one axis-system to another.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      435,
      0
     ]
    ],
    [
     [
      412,
      0
     ]
    ],
    [
     [
      416,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Geometry"
    },
    {
     "NickName": "A",
     "TypeName": "Plane"
    },
    {
     "NickName": "B",
     "TypeName": "Plane"
    }
   ],
   "Outputs": [
    {
     "NickName": "G",
     "TypeName": "Geometry"
    },
    {
     "NickName": "X",
     "TypeName": "Transform"
    }
   ]
  },
  {
   "Id": 441,
   "Name": "Orient",
   "NickName": "small bb",
   "Description": "Orient an object. Orientation is sometimes called a \u0027ChangeBasis tranformation\u0027. It allows for remapping of geometry from one axis-system to another.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      437,
      0
     ]
    ],
    [
     [
      412,
      0
     ]
    ],
    [
     [
      416,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Geometry"
    },
    {
     "NickName": "A",
     "TypeName": "Plane"
    },
    {
     "NickName": "B",
     "TypeName": "Plane"
    }
   ],
   "Outputs": [
    {
     "NickName": "G",
     "TypeName": "Geometry"
    },
    {
     "NickName": "X",
     "TypeName": "Transform"
    }
   ]
  },
  {
   "Id": 442,
   "Name": "Orient",
   "NickName": "big bb",
   "Description": "Orient an object. Orientation is sometimes called a \u0027ChangeBasis tranformation\u0027. It allows for remapping of geometry from one axis-system to another.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      435,
      0
     ]
    ],
    [
     [
      413,
      0
     ]
    ],
    [
     [
      417,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Geometry"
    },
    {
     "NickName": "A",
     "TypeName": "Plane"
    },
    {
     "NickName": "B",
     "TypeName": "Plane"
    }
   ],
   "Outputs": [
    {
     "NickName": "G",
     "TypeName": "Geometry"
    },
    {
     "NickName": "X",
     "TypeName": "Transform"
    }
   ]
  },
  {
   "Id": 443,
   "Name": "Orient",
   "NickName": "small bb",
   "Description": "Orient an object. Orientation is sometimes called a \u0027ChangeBasis tranformation\u0027. It allows for remapping of geometry from one axis-system to another.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      437,
      0
     ]
    ],
    [
     [
      413,
      0
     ]
    ],
    [
     [
      417,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Geometry"
    },
    {
     "NickName": "A",
     "TypeName": "Plane"
    },
    {
     "NickName": "B",
     "TypeName": "Plane"
    }
   ],
   "Outputs": [
    {
     "NickName": "G",
     "TypeName": "Geometry"
    },
    {
     "NickName": "X",
     "TypeName": "Transform"
    }
   ]
  },
  {
   "Id": 444,
   "Name": "Move",
   "NickName": "Move",
   "Description": "Translate (move) an object along a vector.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      399,
      0
     ]
    ],
    [
     [
      448,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Geometry"
    },
    {
     "NickName": "T",
     "TypeName": "Vector"
    }
   ],
   "Outputs": [
    {
     "NickName": "G",
     "TypeName": "Geometry"
    },
    {
     "NickName": "X",
     "TypeName": "Transform"
    }
   ]
  },
  {
   "Id": 445,
   "Name": "Region Difference",
   "NickName": "RDiff",
   "Description": "Difference between two sets of planar closed curves (regions)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      436,
      0
     ]
    ],
    [
     [
      447,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Curve"
    },
    {
     "NickName": "B",
     "TypeName": "Curve"
    },
    {
     "NickName": "P",
     "TypeName": "Plane"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 446,
   "Name": "Reverse",
   "NickName": "Rev",
   "Description": "Reverse a vector (multiply by -1).",
   "IsComponent": true,
   "Inputs": [
    [
     [
      427,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "V",
     "TypeName": "Vector"
    }
   ],
   "Outputs": [
    {
     "NickName": "V",
     "TypeName": "Vector"
    }
   ]
  },
  {
   "Id": 447,
   "Name": "Curve",
   "NickName": "bb_rdc",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      648,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "bb_rdc",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 448,
   "Name": "Amplitude",
   "NickName": "Amp",
   "Description": "Set the amplitude (length) of a vector.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      446,
      0
     ]
    ],
    [
     [
      449,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "V",
     "TypeName": "Vector"
    },
    {
     "NickName": "A",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "V",
     "TypeName": "Vector"
    }
   ]
  },
  {
   "Id": 449,
   "Name": "Number",
   "NickName": "Num",
   "Description": "Contains a collection of floating point numbers",
   "IsComponent": false,
   "Inputs": [
    [
     [
      307,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "Num",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 450,
   "Name": "Region Difference",
   "NickName": "RDiff",
   "Description": "Difference between two sets of planar closed curves (regions)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      438,
      0
     ]
    ],
    [
     [
      651,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Curve"
    },
    {
     "NickName": "B",
     "TypeName": "Curve"
    },
    {
     "NickName": "P",
     "TypeName": "Plane"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 451,
   "Name": "Curve",
   "NickName": "room_full",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      445,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room_full",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 452,
   "Name": "Curve",
   "NickName": "room_rdc",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      450,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room_rdc",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 453,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 454,
   "Name": "Boolean Toggle",
   "NickName": "walls must?",
   "Description": "Boolean (true/false) toggle",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "walls must?",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 455,
   "Name": "Point On Curve",
   "NickName": "CurvePoint",
   "Description": "Evaluates a curve at a specific location",
   "IsComponent": false,
   "Inputs": [
    [
     [
      784,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Point"
    }
   ],
   "Outputs": [
    {
     "NickName": "CurvePoint",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 456,
   "Name": "Curve Closest Point",
   "NickName": "Crv CP",
   "Description": "Find the closest point on a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      455,
      0
     ]
    ],
    [
     [
      460,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "t",
     "TypeName": "Number"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 457,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      784,
      0
     ]
    ],
    [
     [
      458,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 458,
   "Name": "Smaller Than",
   "NickName": "Smaller",
   "Description": "Smaller than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      456,
      2
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003C",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003C=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 459,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      454,
      0
     ]
    ],
    [
     [
      784,
      0
     ]
    ],
    [
     [
      457,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(1)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 460,
   "Name": "Curve",
   "NickName": "WALLS",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      86,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "WALLS",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 461,
   "Name": "Curve Closest Point",
   "NickName": "Crv CP",
   "Description": "Find the closest point on a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      359,
      0
     ]
    ],
    [
     [
      330,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "t",
     "TypeName": "Number"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 462,
   "Name": "Curve Closest Point",
   "NickName": "Crv CP",
   "Description": "Find the closest point on a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      361,
      0
     ]
    ],
    [
     [
      330,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "P",
     "TypeName": "Point"
    },
    {
     "NickName": "t",
     "TypeName": "Number"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 463,
   "Name": "Length",
   "NickName": "Len",
   "Description": "Measure the length of a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      357,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 464,
   "Name": "Boundary Surfaces",
   "NickName": "Boundary",
   "Description": "Create planar surfaces from a collection of boundary edge curves.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      451,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "E",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "S",
     "TypeName": "Surface"
    }
   ]
  },
  {
   "Id": 465,
   "Name": "Boundary Surfaces",
   "NickName": "Boundary",
   "Description": "Create planar surfaces from a collection of boundary edge curves.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      452,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "E",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "S",
     "TypeName": "Surface"
    }
   ]
  },
  {
   "Id": 466,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 467,
   "Name": "Curve",
   "NickName": "Edges for checking",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      459,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "Edges for checking",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 468,
   "Name": "List Length",
   "NickName": "Lng",
   "Description": "Measure the length of a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      287,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ]
  },
  {
   "Id": 469,
   "Name": "List Length",
   "NickName": "Lng",
   "Description": "Measure the length of a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      468,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ]
  },
  {
   "Id": 470,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      469,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 471,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 472,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      769,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 473,
   "Name": "Flatten Tree",
   "NickName": "Flatten",
   "Description": "Flatten a data tree by removing all branching information.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      330,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Path"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 474,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 475,
   "Name": "Flatten Tree",
   "NickName": "Flatten",
   "Description": "Flatten a data tree by removing all branching information.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      573,
      1
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Path"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 476,
   "Name": "Flatten Tree",
   "NickName": "Flatten",
   "Description": "Flatten a data tree by removing all branching information.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      573,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Path"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 477,
   "Name": "Flatten Tree",
   "NickName": "Flatten",
   "Description": "Flatten a data tree by removing all branching information.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      574,
      1
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Path"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 478,
   "Name": "Flatten Tree",
   "NickName": "Flatten",
   "Description": "Flatten a data tree by removing all branching information.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      574,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Path"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 479,
   "Name": "Flatten Tree",
   "NickName": "Flatten",
   "Description": "Flatten a data tree by removing all branching information.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      403,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Path"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 480,
   "Name": "Flatten Tree",
   "NickName": "Flatten",
   "Description": "Flatten a data tree by removing all branching information.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      409,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Path"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 481,
   "Name": "Flatten Tree",
   "NickName": "Flatten",
   "Description": "Flatten a data tree by removing all branching information.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      297,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Path"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 482,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 483,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 484,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      467,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 485,
   "Name": "List Length",
   "NickName": "Lng",
   "Description": "Measure the length of a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      324,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ]
  },
  {
   "Id": 486,
   "Name": "Repeat Data",
   "NickName": "Repeat",
   "Description": "Repeat a pattern until it reaches a certain length.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      484,
      0
     ]
    ],
    [
     [
      716,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 487,
   "Name": "Series",
   "NickName": "Series",
   "Description": "Create a series of numbers.",
   "IsComponent": true,
   "Inputs": [
    [],
    [],
    [
     [
      469,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "S",
     "TypeName": "Number"
    },
    {
     "NickName": "N",
     "TypeName": "Number"
    },
    {
     "NickName": "C",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "S",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 488,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      487,
      0
     ]
    ],
    [
     [
      305,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 489,
   "Name": "Data",
   "NickName": "indexes furniture var",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      488,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "indexes furniture var",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 490,
   "Name": "Curve",
   "NickName": "Crv depth full",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      476,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "Crv depth full",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 491,
   "Name": "Curve",
   "NickName": "Crv depth rdc",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      478,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "Crv depth rdc",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 492,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 493,
   "Name": "List Length",
   "NickName": "Lng",
   "Description": "Measure the length of a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      459,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ]
  },
  {
   "Id": 494,
   "Name": "Repeat Data",
   "NickName": "Repeat",
   "Description": "Repeat a pattern until it reaches a certain length.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      298,
      0
     ]
    ],
    [
     [
      493,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 495,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      494,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 496,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      501,
      0
     ]
    ],
    [
     [
      305,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 497,
   "Name": "Curve",
   "NickName": "room full ",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      496,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room full ",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 498,
   "Name": "Curve",
   "NickName": "room full ",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      504,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room full ",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 499,
   "Name": "Curve",
   "NickName": "walls long enough",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      508,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "walls long enough",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 500,
   "Name": "Data",
   "NickName": "indexes furniture var",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      509,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "indexes furniture var",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 501,
   "Name": "Repeat Data",
   "NickName": "Repeat",
   "Description": "Repeat a pattern until it reaches a certain length.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      495,
      0
     ]
    ],
    [
     [
      716,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 502,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 503,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      497,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 504,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      506,
      0
     ]
    ],
    [
     [
      503,
      0
     ]
    ],
    [
     [
      497,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(1)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 505,
   "Name": "Null Item",
   "NickName": "Null",
   "Description": "Test a data item for null or invalidity",
   "IsComponent": true,
   "Inputs": [
    [
     [
      503,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "I",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "N",
     "TypeName": "Boolean"
    },
    {
     "NickName": "X",
     "TypeName": "Boolean"
    },
    {
     "NickName": "D",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 506,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      505,
      0
     ]
    ],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 507,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      331,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 508,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      506,
      0
     ]
    ],
    [
     [
      507,
      0
     ]
    ],
    [
     [
      331,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(1)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 509,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      506,
      0
     ]
    ],
    [
     [
      510,
      0
     ]
    ],
    [
     [
      489,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(1)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 510,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      489,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 511,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      512,
      0
     ]
    ],
    [
     [
      514,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 512,
   "Name": "Curve",
   "NickName": "Crv depth full",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      490,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "Crv depth full",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 513,
   "Name": "Curve",
   "NickName": "Crv depth rdc",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      491,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "Crv depth rdc",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 514,
   "Name": "Data",
   "NickName": "indexes furniture var",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      500,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "indexes furniture var",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 515,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      513,
      0
     ]
    ],
    [
     [
      514,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 516,
   "Name": "Length",
   "NickName": "Len",
   "Description": "Measure the length of a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      511,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 517,
   "Name": "Length",
   "NickName": "Len",
   "Description": "Measure the length of a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      515,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 518,
   "Name": "Curve",
   "NickName": "room full ",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      498,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room full ",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 519,
   "Name": "Repeat Data",
   "NickName": "Repeat",
   "Description": "Repeat a pattern until it reaches a certain length.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      779,
      0
     ]
    ],
    [
     [
      493,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 520,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      519,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 521,
   "Name": "Repeat Data",
   "NickName": "Repeat",
   "Description": "Repeat a pattern until it reaches a certain length.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      520,
      0
     ]
    ],
    [
     [
      716,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 522,
   "Name": "Curve",
   "NickName": "room_rdc",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      526,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room_rdc",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 523,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      521,
      0
     ]
    ],
    [
     [
      305,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 524,
   "Name": "Curve",
   "NickName": "room_rdc",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      523,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room_rdc",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 525,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      524,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 526,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      506,
      0
     ]
    ],
    [
     [
      525,
      0
     ]
    ],
    [
     [
      524,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(1)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 527,
   "Name": "Curve",
   "NickName": "room_rdc",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      522,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room_rdc",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 528,
   "Name": "Curve",
   "NickName": "Crv width full",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      357,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "Crv width full",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 529,
   "Name": "Curve",
   "NickName": "Crv width rdc",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      358,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "Crv width rdc",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 530,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      528,
      0
     ]
    ],
    [
     [
      514,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 531,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      529,
      0
     ]
    ],
    [
     [
      514,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 532,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 533,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 534,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 535,
   "Name": "Length",
   "NickName": "Len",
   "Description": "Measure the length of a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      363,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 536,
   "Name": "Geometry",
   "NickName": "detsils",
   "Description": "Contains a collection of generic geometry",
   "IsComponent": false,
   "Inputs": [
    [
     [
      481,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Geometry"
    }
   ],
   "Outputs": [
    {
     "NickName": "detsils",
     "TypeName": "Geometry"
    }
   ]
  },
  {
   "Id": 537,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      536,
      0
     ]
    ],
    [
     [
      514,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 538,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      597,
      0
     ]
    ],
    [
     [
      420,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 539,
   "Name": "Data",
   "NickName": "plane starting point",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      479,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "plane starting point",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 540,
   "Name": "Data",
   "NickName": "plane ending point",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      480,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "plane ending point",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 541,
   "Name": "Flatten Tree",
   "NickName": "Flatten",
   "Description": "Flatten a data tree by removing all branching information.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      565,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Path"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 542,
   "Name": "Flatten Tree",
   "NickName": "Flatten",
   "Description": "Flatten a data tree by removing all branching information.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      568,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Path"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 543,
   "Name": "Curve",
   "NickName": "big_bb",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      541,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "big_bb",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 544,
   "Name": "Curve",
   "NickName": "small_bb",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      542,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "small_bb",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 545,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      539,
      0
     ]
    ],
    [
     [
      514,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 546,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      540,
      0
     ]
    ],
    [
     [
      514,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 547,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      543,
      0
     ]
    ],
    [
     [
      514,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 548,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      544,
      0
     ]
    ],
    [
     [
      514,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 549,
   "Name": "Data",
   "NickName": "plane starting point",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      545,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "plane starting point",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 550,
   "Name": "Data",
   "NickName": "plane ending point",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      546,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "plane ending point",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 551,
   "Name": "Curve",
   "NickName": "big_bb",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      547,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "big_bb",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 552,
   "Name": "Curve",
   "NickName": "small_bb",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      548,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "small_bb",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 553,
   "Name": "Data",
   "NickName": "plane starting point",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      549,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "plane starting point",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 554,
   "Name": "Data",
   "NickName": "plane ending point",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      550,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "plane ending point",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 555,
   "Name": "Curve",
   "NickName": "big_bb",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      551,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "big_bb",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 556,
   "Name": "Curve",
   "NickName": "small_bb",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      552,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "small_bb",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 557,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      553,
      0
     ]
    ],
    [
     [
      420,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 558,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      554,
      0
     ]
    ],
    [
     [
      420,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 559,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      555,
      0
     ]
    ],
    [
     [
      420,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 560,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      556,
      0
     ]
    ],
    [
     [
      420,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 561,
   "Name": "Data",
   "NickName": "plane starting point",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      557,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "plane starting point",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 562,
   "Name": "Data",
   "NickName": "plane ending point",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      558,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "plane ending point",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 563,
   "Name": "Curve",
   "NickName": "big_bb",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      559,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "big_bb",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 564,
   "Name": "Curve",
   "NickName": "small_bb",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      560,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "small_bb",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 565,
   "Name": "Flip Curve",
   "NickName": "Flip",
   "Description": "Flip a curve using an optional guide curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      301,
      0
     ]
    ],
    [
     [
      566,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "G",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "F",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 566,
   "Name": "Rectangle",
   "NickName": "Rectangle",
   "Description": "Create a rectangle on a plane",
   "IsComponent": true,
   "Inputs": [
    [
     [
      567,
      0
     ]
    ],
    [],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "P",
     "TypeName": "Plane"
    },
    {
     "NickName": "X",
     "TypeName": "Domain"
    },
    {
     "NickName": "Y",
     "TypeName": "Domain"
    },
    {
     "NickName": "R",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "L",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 567,
   "Name": "XY Plane",
   "NickName": "XY",
   "Description": "World XY plane.",
   "IsComponent": true,
   "Inputs": [
    []
   ],
   "InputParams": [
    {
     "NickName": "O",
     "TypeName": "Point"
    }
   ],
   "Outputs": [
    {
     "NickName": "P",
     "TypeName": "Plane"
    }
   ]
  },
  {
   "Id": 568,
   "Name": "Flip Curve",
   "NickName": "Flip",
   "Description": "Flip a curve using an optional guide curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      302,
      0
     ]
    ],
    [
     [
      566,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "G",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "F",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 569,
   "Name": "List Length",
   "NickName": "Lng",
   "Description": "Measure the length of a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      310,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ]
  },
  {
   "Id": 570,
   "Name": "Series",
   "NickName": "Series",
   "Description": "Create a series of numbers.",
   "IsComponent": true,
   "Inputs": [
    [],
    [],
    [
     [
      569,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "S",
     "TypeName": "Number"
    },
    {
     "NickName": "N",
     "TypeName": "Number"
    },
    {
     "NickName": "C",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "S",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 571,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      360,
      2
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 572,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      360,
      2
     ]
    ],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "\u002B1",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 573,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      310,
      0
     ]
    ],
    [
     [
      572,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "-1",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 574,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      311,
      0
     ]
    ],
    [
     [
      575,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "-1",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 575,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      362,
      2
     ]
    ],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "\u002B1",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 576,
   "Name": "Division",
   "NickName": "A/B",
   "Description": "Mathematical division",
   "IsComponent": true,
   "Inputs": [
    [
     [
      419,
      0
     ]
    ],
    [
     [
      421,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 577,
   "Name": "Larger Than",
   "NickName": "Larger",
   "Description": "Larger than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      576,
      0
     ]
    ],
    [
     [
      578,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003E=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 578,
   "Name": "Number Slider",
   "NickName": "factor to include alternative positioning",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "factor to include alternative positioning",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 579,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 580,
   "Name": "Boolean",
   "NickName": "include end-plane?",
   "Description": "Contains a collection of boolean values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      577,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "include end-plane?",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 581,
   "Name": "Data",
   "NickName": "Transformation data 1",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      440,
      1
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "Transformation data 1",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 582,
   "Name": "Data",
   "NickName": "Transformation data 2",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      586,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "Transformation data 2",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 583,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      442,
      0
     ]
    ],
    [
     [
      584,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 584,
   "Name": "Boolean",
   "NickName": "include end-plane?",
   "Description": "Contains a collection of boolean values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      580,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "include end-plane?",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 585,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      443,
      0
     ]
    ],
    [
     [
      584,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 586,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      443,
      1
     ]
    ],
    [
     [
      584,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 587,
   "Name": "Curve",
   "NickName": "room full ",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      518,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room full ",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 588,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      587,
      0
     ]
    ],
    [
     [
      420,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 589,
   "Name": "Curve",
   "NickName": "room full ",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      588,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room full ",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 590,
   "Name": "Curve",
   "NickName": "room full ",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      589,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room full ",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 591,
   "Name": "Data",
   "NickName": "Transformation data",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      619,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "Transformation data",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 592,
   "Name": "Curve",
   "NickName": "room full ",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      613,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room full ",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 593,
   "Name": "Data",
   "NickName": "bb full",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      622,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "bb full",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 594,
   "Name": "Data",
   "NickName": "bb reduced",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      625,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "bb reduced",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 595,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      590,
      0
     ]
    ],
    [
     [
      584,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 596,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      598,
      0
     ]
    ],
    [
     [
      584,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 597,
   "Name": "Data",
   "NickName": "indexes furniture var",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      514,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "indexes furniture var",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 598,
   "Name": "Data",
   "NickName": "indexes furniture var",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      538,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "indexes furniture var",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 599,
   "Name": "Data",
   "NickName": "indexes furniture var",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      616,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "indexes furniture var",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 600,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      590,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 601,
   "Name": "List Length",
   "NickName": "rooms cnt",
   "Description": "Measure the length of a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      703,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ]
  },
  {
   "Id": 602,
   "Name": "Larger Than",
   "NickName": "Larger",
   "Description": "Larger than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      601,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003E=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 603,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      602,
      0
     ]
    ],
    [
     [
      590,
      0
     ]
    ],
    [
     [
      600,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(0)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 604,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      595,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 605,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      598,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 606,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      596,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 607,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      581,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 608,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      582,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 609,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      440,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 610,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      583,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 611,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      441,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 612,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      585,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 613,
   "Name": "Merge",
   "NickName": "Merge",
   "Description": "Merge a bunch of data streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      603,
      0
     ]
    ],
    [
     [
      614,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "D1",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D2",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D3",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 614,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      602,
      0
     ]
    ],
    [
     [
      595,
      0
     ]
    ],
    [
     [
      604,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(0)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 615,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      602,
      0
     ]
    ],
    [
     [
      598,
      0
     ]
    ],
    [
     [
      605,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(0)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 616,
   "Name": "Merge",
   "NickName": "Merge",
   "Description": "Merge a bunch of data streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      615,
      0
     ]
    ],
    [
     [
      617,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "D1",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D2",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D3",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 617,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      602,
      0
     ]
    ],
    [
     [
      596,
      0
     ]
    ],
    [
     [
      606,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(0)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 618,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      602,
      0
     ]
    ],
    [
     [
      581,
      0
     ]
    ],
    [
     [
      607,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(0)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 619,
   "Name": "Merge",
   "NickName": "Merge",
   "Description": "Merge a bunch of data streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      618,
      0
     ]
    ],
    [
     [
      620,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "D1",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D2",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D3",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 620,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      602,
      0
     ]
    ],
    [
     [
      582,
      0
     ]
    ],
    [
     [
      608,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(0)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 621,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      602,
      0
     ]
    ],
    [
     [
      440,
      0
     ]
    ],
    [
     [
      609,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(0)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 622,
   "Name": "Merge",
   "NickName": "Merge",
   "Description": "Merge a bunch of data streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      621,
      0
     ]
    ],
    [
     [
      623,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "D1",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D2",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D3",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 623,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      602,
      0
     ]
    ],
    [
     [
      583,
      0
     ]
    ],
    [
     [
      610,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(0)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 624,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      602,
      0
     ]
    ],
    [
     [
      441,
      0
     ]
    ],
    [
     [
      611,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(0)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 625,
   "Name": "Merge",
   "NickName": "Merge",
   "Description": "Merge a bunch of data streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      624,
      0
     ]
    ],
    [
     [
      626,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "D1",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D2",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D3",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 626,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      602,
      0
     ]
    ],
    [
     [
      585,
      0
     ]
    ],
    [
     [
      612,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(0)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 627,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      592,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 628,
   "Name": "Curve",
   "NickName": "room_rdc",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      341,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room_rdc",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 629,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      628,
      0
     ]
    ],
    [
     [
      420,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 630,
   "Name": "Curve",
   "NickName": "room_rdc",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      629,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room_rdc",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 631,
   "Name": "Curve",
   "NickName": "room_rdc",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      632,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room_rdc",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 632,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      630,
      0
     ]
    ],
    [
     [
      584,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 633,
   "Name": "Curve",
   "NickName": "room_rdc",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      630,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room_rdc",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 634,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      633,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 635,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      631,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 636,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      602,
      0
     ]
    ],
    [
     [
      633,
      0
     ]
    ],
    [
     [
      634,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(0)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 637,
   "Name": "Merge",
   "NickName": "Merge",
   "Description": "Merge a bunch of data streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      636,
      0
     ]
    ],
    [
     [
      638,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "D1",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D2",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D3",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 638,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      602,
      0
     ]
    ],
    [
     [
      631,
      0
     ]
    ],
    [
     [
      635,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(0)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 639,
   "Name": "Repeat Data",
   "NickName": "Repeat",
   "Description": "Repeat a pattern until it reaches a certain length.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      460,
      0
     ]
    ],
    [
     [
      493,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 640,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      639,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 641,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      642,
      0
     ]
    ],
    [
     [
      305,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 642,
   "Name": "Repeat Data",
   "NickName": "Repeat",
   "Description": "Repeat a pattern until it reaches a certain length.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      640,
      0
     ]
    ],
    [
     [
      716,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 643,
   "Name": "Curve",
   "NickName": "INITIAL",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      641,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "INITIAL",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 644,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      643,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 645,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      506,
      0
     ]
    ],
    [
     [
      644,
      0
     ]
    ],
    [
     [
      643,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(1)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 646,
   "Name": "Curve",
   "NickName": "INITIAL",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      645,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "INITIAL",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 647,
   "Name": "Curve",
   "NickName": "room reduced",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      637,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "room reduced",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 648,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      594,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 649,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      647,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 650,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      593,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 651,
   "Name": "Data",
   "NickName": "bb full",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      650,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "bb full",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 652,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 653,
   "Name": "Area",
   "NickName": "Area",
   "Description": "Solve area properties for breps, meshes and planar closed curves.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      465,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Geometry"
    }
   ],
   "Outputs": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "C",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 654,
   "Name": "Larger Than",
   "NickName": "Larger",
   "Description": "Larger than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      653,
      0
     ]
    ],
    [
     [
      656,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003E=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 655,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      465,
      0
     ]
    ],
    [
     [
      654,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 656,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 657,
   "Name": "Area",
   "NickName": "Area",
   "Description": "Solve area properties for breps, meshes and planar closed curves.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      464,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Geometry"
    }
   ],
   "Outputs": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "C",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 658,
   "Name": "Larger Than",
   "NickName": "Larger",
   "Description": "Larger than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      657,
      0
     ]
    ],
    [
     [
      660,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003E=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 659,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      464,
      0
     ]
    ],
    [
     [
      658,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 660,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 661,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      659,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 662,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      722,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 663,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      655,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 664,
   "Name": "List Length",
   "NickName": "Lng",
   "Description": "Measure the length of a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      659,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ]
  },
  {
   "Id": 665,
   "Name": "Larger Than",
   "NickName": "Larger",
   "Description": "Larger than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      664,
      0
     ]
    ],
    [
     [
      666,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003E=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 666,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 667,
   "Name": "Mass Addition",
   "NickName": "MA",
   "Description": "Perform mass addition of a list of items",
   "IsComponent": true,
   "Inputs": [
    [
     [
      665,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "I",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "Pr",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 668,
   "Name": "Larger Than",
   "NickName": "Larger",
   "Description": "Larger than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      667,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003E=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 669,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      668,
      0
     ]
    ],
    [
     [
      722,
      0
     ]
    ],
    [
     [
      662,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(0)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 670,
   "Name": "List Length",
   "NickName": "Lng",
   "Description": "Measure the length of a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      655,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ]
  },
  {
   "Id": 671,
   "Name": "Larger Than",
   "NickName": "Larger",
   "Description": "Larger than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      670,
      0
     ]
    ],
    [
     [
      672,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003E=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 672,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 673,
   "Name": "Mass Addition",
   "NickName": "MA",
   "Description": "Perform mass addition of a list of items",
   "IsComponent": true,
   "Inputs": [
    [
     [
      671,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "I",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "Pr",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 674,
   "Name": "Larger Than",
   "NickName": "Larger",
   "Description": "Larger than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      673,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003E=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 675,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      674,
      0
     ]
    ],
    [
     [
      733,
      0
     ]
    ],
    [
     [
      676,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(0)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 676,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      733,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 677,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 678,
   "Name": "Curve",
   "NickName": "INITIAL",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      646,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "INITIAL",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 679,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      678,
      0
     ]
    ],
    [
     [
      420,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 680,
   "Name": "Curve",
   "NickName": "INITIAL",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      679,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "INITIAL",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 681,
   "Name": "Curve",
   "NickName": "INITIAL",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      680,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "INITIAL",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 682,
   "Name": "Cull Pattern",
   "NickName": "Cull",
   "Description": "Cull (remove) elements in a list using a repeating bit mask.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      680,
      0
     ]
    ],
    [
     [
      584,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 683,
   "Name": "Curve",
   "NickName": "INITIAL",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      682,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "INITIAL",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 684,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      681,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 685,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      683,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 686,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      602,
      0
     ]
    ],
    [
     [
      681,
      0
     ]
    ],
    [
     [
      684,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(0)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 687,
   "Name": "Merge",
   "NickName": "Merge",
   "Description": "Merge a bunch of data streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      686,
      0
     ]
    ],
    [
     [
      688,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "D1",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D2",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D3",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 688,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      602,
      0
     ]
    ],
    [
     [
      683,
      0
     ]
    ],
    [
     [
      685,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(0)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 689,
   "Name": "Curve",
   "NickName": "INITIAL",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      687,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "INITIAL",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 690,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      689,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 691,
   "Name": "Curve",
   "NickName": "INITIAL",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      690,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "INITIAL",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 692,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      599,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 693,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      591,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 694,
   "Name": "Data",
   "NickName": "indexes furniture var",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      692,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "indexes furniture var",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 695,
   "Name": "Data",
   "NickName": "Transformation data",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      693,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "Transformation data",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 696,
   "Name": "Data",
   "NickName": "RESULTS_1_indexes furniture var",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      698,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "RESULTS_1_indexes furniture var",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 697,
   "Name": "Data",
   "NickName": "RESULTS_1_Transformation data",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      699,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "RESULTS_1_Transformation data",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 698,
   "Name": "Data",
   "NickName": "indexes furniture var",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      694,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "indexes furniture var",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 699,
   "Name": "Data",
   "NickName": "Transformation data",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      695,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "Transformation data",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 700,
   "Name": "Geometry",
   "NickName": "detsils",
   "Description": "Contains a collection of generic geometry",
   "IsComponent": false,
   "Inputs": [
    [
     [
      404,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Geometry"
    }
   ],
   "Outputs": [
    {
     "NickName": "detsils",
     "TypeName": "Geometry"
    }
   ]
  },
  {
   "Id": 701,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 702,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 703,
   "Name": "Flatten Tree",
   "NickName": "Flatten",
   "Description": "Flatten a data tree by removing all branching information.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      298,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Path"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 704,
   "Name": "Data",
   "NickName": "importance_furniture",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      707,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "importance_furniture",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 705,
   "Name": "List Item",
   "NickName": "importance",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      287,
      0
     ]
    ],
    [
     [
      706,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 706,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 707,
   "Name": "Flatten Tree",
   "NickName": "Flatten",
   "Description": "Flatten a data tree by removing all branching information.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      705,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Path"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 708,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      382,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 709,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      643,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 710,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      645,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 711,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      399,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 712,
   "Name": "Nulls In Empty Branches",
   "NickName": "Nulls in Empty",
   "Description": "Inserts null objects into empty branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      696,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 713,
   "Name": "Nulls In Empty Branches",
   "NickName": "Nulls in Empty",
   "Description": "Inserts null objects into empty branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      697,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "D",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 714,
   "Name": "Data",
   "NickName": "importance",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      704,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "importance",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 715,
   "Name": "List Length",
   "NickName": "Lng",
   "Description": "Measure the length of a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      287,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ]
  },
  {
   "Id": 716,
   "Name": "List Length",
   "NickName": "Lng",
   "Description": "Measure the length of a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      715,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ]
  },
  {
   "Id": 717,
   "Name": "Polyline Offset",
   "NickName": "PolyOffset",
   "Description": "Offset a polyline curve using Clipper",
   "IsComponent": true,
   "Inputs": [
    [
     [
      718,
      0
     ]
    ],
    [
     [
      720,
      0
     ]
    ],
    [],
    [],
    [
     [
      726,
      0
     ]
    ],
    [
     [
      726,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "P",
     "TypeName": "Curve"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    },
    {
     "NickName": "Pln",
     "TypeName": "Plane"
    },
    {
     "NickName": "T",
     "TypeName": "Number"
    },
    {
     "NickName": "CF",
     "TypeName": "Integer"
    },
    {
     "NickName": "OF",
     "TypeName": "Integer"
    },
    {
     "NickName": "M",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "H",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 718,
   "Name": "Join Curves",
   "NickName": "Join",
   "Description": "Join as many curves as possible",
   "IsComponent": true,
   "Inputs": [
    [
     [
      719,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 719,
   "Name": "Brep Wireframe",
   "NickName": "Wires",
   "Description": "Extract the wireframe curves of a brep.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      753,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "B",
     "TypeName": "Brep"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "W",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 720,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 721,
   "Name": "Polyline Offset",
   "NickName": "PolyOffset",
   "Description": "Offset a polyline curve using Clipper",
   "IsComponent": true,
   "Inputs": [
    [
     [
      754,
      0
     ]
    ],
    [
     [
      720,
      0
     ]
    ],
    [],
    [],
    [
     [
      726,
      0
     ]
    ],
    [
     [
      726,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "P",
     "TypeName": "Curve"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    },
    {
     "NickName": "Pln",
     "TypeName": "Plane"
    },
    {
     "NickName": "T",
     "TypeName": "Number"
    },
    {
     "NickName": "CF",
     "TypeName": "Integer"
    },
    {
     "NickName": "OF",
     "TypeName": "Integer"
    },
    {
     "NickName": "M",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "H",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 722,
   "Name": "Data",
   "NickName": "Data",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      721,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "Data",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 723,
   "Name": "Sort List",
   "NickName": "Sort",
   "Description": "Sort a list of numeric keys.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      724,
      0
     ]
    ],
    [
     [
      717,
      1
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 724,
   "Name": "Area",
   "NickName": "Area",
   "Description": "Solve area properties for breps, meshes and planar closed curves.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      717,
      1
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Geometry"
    }
   ],
   "Outputs": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "C",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 725,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      723,
      1
     ]
    ],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 726,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 727,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 728,
   "Name": "Polyline Offset",
   "NickName": "PolyOffset",
   "Description": "Offset a polyline curve using Clipper",
   "IsComponent": true,
   "Inputs": [
    [
     [
      729,
      0
     ]
    ],
    [
     [
      731,
      0
     ]
    ],
    [],
    [],
    [
     [
      737,
      0
     ]
    ],
    [
     [
      737,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "P",
     "TypeName": "Curve"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    },
    {
     "NickName": "Pln",
     "TypeName": "Plane"
    },
    {
     "NickName": "T",
     "TypeName": "Number"
    },
    {
     "NickName": "CF",
     "TypeName": "Integer"
    },
    {
     "NickName": "OF",
     "TypeName": "Integer"
    },
    {
     "NickName": "M",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "H",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 729,
   "Name": "Join Curves",
   "NickName": "Join",
   "Description": "Join as many curves as possible",
   "IsComponent": true,
   "Inputs": [
    [
     [
      730,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 730,
   "Name": "Brep Wireframe",
   "NickName": "Wires",
   "Description": "Extract the wireframe curves of a brep.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      739,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "B",
     "TypeName": "Brep"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "W",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 731,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 732,
   "Name": "Polyline Offset",
   "NickName": "PolyOffset",
   "Description": "Offset a polyline curve using Clipper",
   "IsComponent": true,
   "Inputs": [
    [
     [
      740,
      0
     ]
    ],
    [
     [
      731,
      0
     ]
    ],
    [],
    [],
    [
     [
      737,
      0
     ]
    ],
    [
     [
      737,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "P",
     "TypeName": "Curve"
    },
    {
     "NickName": "D",
     "TypeName": "Number"
    },
    {
     "NickName": "Pln",
     "TypeName": "Plane"
    },
    {
     "NickName": "T",
     "TypeName": "Number"
    },
    {
     "NickName": "CF",
     "TypeName": "Integer"
    },
    {
     "NickName": "OF",
     "TypeName": "Integer"
    },
    {
     "NickName": "M",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "H",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 733,
   "Name": "Data",
   "NickName": "Data",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      732,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "Data",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 734,
   "Name": "Sort List",
   "NickName": "Sort",
   "Description": "Sort a list of numeric keys.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      735,
      0
     ]
    ],
    [
     [
      728,
      1
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 735,
   "Name": "Area",
   "NickName": "Area",
   "Description": "Solve area properties for breps, meshes and planar closed curves.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      728,
      1
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Geometry"
    }
   ],
   "Outputs": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "C",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 736,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      734,
      1
     ]
    ],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 737,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 738,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 739,
   "Name": "Clean Tree",
   "NickName": "Clean",
   "Description": "Removed all null and invalid items from a data tree.",
   "IsComponent": true,
   "Inputs": [
    [],
    [],
    [],
    [
     [
      663,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "N",
     "TypeName": "Boolean"
    },
    {
     "NickName": "X",
     "TypeName": "Boolean"
    },
    {
     "NickName": "E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 740,
   "Name": "Clean Tree",
   "NickName": "Clean",
   "Description": "Removed all null and invalid items from a data tree.",
   "IsComponent": true,
   "Inputs": [
    [],
    [],
    [],
    [
     [
      736,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "N",
     "TypeName": "Boolean"
    },
    {
     "NickName": "X",
     "TypeName": "Boolean"
    },
    {
     "NickName": "E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 741,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 742,
   "Name": "List Item",
   "NickName": "score",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      287,
      0
     ]
    ],
    [
     [
      741,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 743,
   "Name": "Data",
   "NickName": "score_furniture",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      744,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "score_furniture",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 744,
   "Name": "Flatten Tree",
   "NickName": "Flatten",
   "Description": "Flatten a data tree by removing all branching information.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      742,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Path"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 745,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      749,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 746,
   "Name": "Equality",
   "NickName": "Equals",
   "Description": "Test for (in)equality of two numbers",
   "IsComponent": true,
   "Inputs": [
    [
     [
      705,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "=",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u2260",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 747,
   "Name": "Multiplication",
   "NickName": "A\u00D7B",
   "Description": "Mathematical multiplication",
   "IsComponent": true,
   "Inputs": [
    [
     [
      746,
      0
     ]
    ],
    [
     [
      742,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 748,
   "Name": "Flatten Tree",
   "NickName": "Flatten",
   "Description": "Flatten a data tree by removing all branching information.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      747,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Path"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 749,
   "Name": "Sort List",
   "NickName": "Sort",
   "Description": "Sort a list of numeric keys.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      748,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 750,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      749,
      0
     ]
    ],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 751,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      750,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 752,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      719,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 753,
   "Name": "Clean Tree",
   "NickName": "Clean",
   "Description": "Removed all null and invalid items from a data tree.",
   "IsComponent": true,
   "Inputs": [
    [],
    [],
    [],
    [
     [
      661,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "N",
     "TypeName": "Boolean"
    },
    {
     "NickName": "X",
     "TypeName": "Boolean"
    },
    {
     "NickName": "E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 754,
   "Name": "Clean Tree",
   "NickName": "Clean",
   "Description": "Removed all null and invalid items from a data tree.",
   "IsComponent": true,
   "Inputs": [
    [],
    [],
    [],
    [
     [
      725,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "N",
     "TypeName": "Boolean"
    },
    {
     "NickName": "X",
     "TypeName": "Boolean"
    },
    {
     "NickName": "E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 755,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      661,
      0
     ]
    ],
    [
     [
      756,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 756,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 757,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      663,
      0
     ]
    ],
    [
     [
      756,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 758,
   "Name": "Flatten Tree",
   "NickName": "Flatten",
   "Description": "Flatten a data tree by removing all branching information.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      663,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Path"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 759,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      758,
      0
     ]
    ],
    [
     [
      760,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 760,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 761,
   "Name": "Larger Than",
   "NickName": "Larger",
   "Description": "Larger than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003E=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 762,
   "Name": "Boundary Surfaces",
   "NickName": "Boundary",
   "Description": "Create planar surfaces from a collection of boundary edge curves.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      722,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "E",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "S",
     "TypeName": "Surface"
    }
   ]
  },
  {
   "Id": 763,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      762,
      0
     ]
    ],
    [
     [
      764,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 764,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 765,
   "Name": "Custom Preview",
   "NickName": "Preview",
   "Description": "Allows for customized geometry previews",
   "IsComponent": true,
   "Inputs": [
    [
     [
      763,
      0
     ]
    ],
    [
     [
      766,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Geometry"
    },
    {
     "NickName": "M",
     "TypeName": "Shader"
    }
   ],
   "Outputs": []
  },
  {
   "Id": 766,
   "Name": "Colour Swatch",
   "NickName": "Swatch",
   "Description": "Colour (palette) swatch",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "Swatch",
     "TypeName": "Colour"
    }
   ]
  },
  {
   "Id": 767,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 768,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      742,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 769,
   "Name": "Data",
   "NickName": "wall index ",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      19,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "wall index ",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 770,
   "Name": "Curve",
   "NickName": "result_room_full",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      669,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "result_room_full",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 771,
   "Name": "Curve",
   "NickName": "result_room_rdc",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      675,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "result_room_rdc",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 772,
   "Name": "Curve",
   "NickName": "result_INITIAL",
   "Description": "Contains a collection of generic curves",
   "IsComponent": false,
   "Inputs": [
    [
     [
      691,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "result_INITIAL",
     "TypeName": "Curve"
    }
   ]
  },
  {
   "Id": 773,
   "Name": "Geometry",
   "NickName": "RESULT_Details",
   "Description": "Contains a collection of generic geometry",
   "IsComponent": false,
   "Inputs": [
    [
     [
      700,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Geometry"
    }
   ],
   "Outputs": [
    {
     "NickName": "RESULT_Details",
     "TypeName": "Geometry"
    }
   ]
  },
  {
   "Id": 774,
   "Name": "Data",
   "NickName": "Result_score",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      743,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "Result_score",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 775,
   "Name": "Data",
   "NickName": "RESULTS_1_indexes furniture var",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      712,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "RESULTS_1_indexes furniture var",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 776,
   "Name": "Data",
   "NickName": "RESULTS_Transformation data",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      713,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "RESULTS_Transformation data",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 777,
   "Name": "Explode",
   "NickName": "Explode",
   "Description": "Explode a curve into smaller segments.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      779,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "R",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "S",
     "TypeName": "Curve"
    },
    {
     "NickName": "V",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 778,
   "Name": "Rectangle",
   "NickName": "Rectangle",
   "Description": "Create a rectangle on a plane",
   "IsComponent": true,
   "Inputs": [
    [],
    [],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "P",
     "TypeName": "Plane"
    },
    {
     "NickName": "X",
     "TypeName": "Domain"
    },
    {
     "NickName": "Y",
     "TypeName": "Domain"
    },
    {
     "NickName": "R",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "L",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 779,
   "Name": "Flip Curve",
   "NickName": "Flip",
   "Description": "Flip a curve using an optional guide curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      299,
      0
     ]
    ],
    [
     [
      778,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "G",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "F",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 780,
   "Name": "List Length",
   "NickName": "Lng",
   "Description": "Measure the length of a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      298,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ]
  },
  {
   "Id": 781,
   "Name": "Larger Than",
   "NickName": "Larger",
   "Description": "Larger than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      780,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003E=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 782,
   "Name": "Mass Addition",
   "NickName": "MA",
   "Description": "Perform mass addition of a list of items",
   "IsComponent": true,
   "Inputs": [
    [
     [
      781,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "I",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "Pr",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 783,
   "Name": "Larger Than",
   "NickName": "Larger",
   "Description": "Larger than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      782,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003E=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 784,
   "Name": "Stream Filter",
   "NickName": "Filter",
   "Description": "Filters a collection of input streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      794,
      0
     ]
    ],
    [
     [
      777,
      0
     ]
    ],
    [
     [
      785,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "G",
     "TypeName": "Integer"
    },
    {
     "NickName": "0",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "1",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "S(0)",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 785,
   "Name": "Trim Tree",
   "NickName": "Trim",
   "Description": "Reduce the complexity of a tree by merging the outermost branches.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      777,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 786,
   "Name": "Data",
   "NickName": "importance_furniture",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      704,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Integer"
    }
   ],
   "Outputs": [
    {
     "NickName": "importance_furniture",
     "TypeName": "Integer"
    }
   ]
  },
  {
   "Id": 787,
   "Name": "Tree Branch",
   "NickName": "TBranch",
   "Description": "Retrieve a specific branch from a data tree.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      451,
      0
     ]
    ],
    [
     [
      788,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Path"
    }
   ],
   "Outputs": [
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 788,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 789,
   "Name": "Tree Branch",
   "NickName": "TBranch",
   "Description": "Retrieve a specific branch from a data tree.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      452,
      0
     ]
    ],
    [
     [
      788,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Path"
    }
   ],
   "Outputs": [
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 790,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      299,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 791,
   "Name": "List Length",
   "NickName": "Lng",
   "Description": "Measure the length of a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      299,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Integer"
    }
   ]
  },
  {
   "Id": 792,
   "Name": "Larger Than",
   "NickName": "Larger",
   "Description": "Larger than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      791,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003E=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 793,
   "Name": "Mass Addition",
   "NickName": "MA",
   "Description": "Perform mass addition of a list of items",
   "IsComponent": true,
   "Inputs": [
    [
     [
      792,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "I",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "Pr",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 794,
   "Name": "Gate Or",
   "NickName": "Or",
   "Description": "Perform boolean disjunction (OR gate).",
   "IsComponent": true,
   "Inputs": [
    [
     [
      783,
      0
     ]
    ],
    [
     [
      795,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Boolean"
    },
    {
     "NickName": "B",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 795,
   "Name": "Larger Than",
   "NickName": "Larger",
   "Description": "Larger than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      793,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003E=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 796,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      705,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 797,
   "Name": "Sort List",
   "NickName": "Sort",
   "Description": "Sort a list of numeric keys.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      798,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 798,
   "Name": "Data",
   "NickName": "Result_score",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      743,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "Result_score",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 799,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      797,
      0
     ]
    ],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 800,
   "Name": "Sort List",
   "NickName": "Sort",
   "Description": "Sort a list of numeric keys.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      743,
      0
     ]
    ],
    [
     [
      743,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "K",
     "TypeName": "Number"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 801,
   "Name": "List Item",
   "NickName": "Item",
   "Description": "Retrieve a specific item from a list.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      800,
      0
     ]
    ],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "i",
     "TypeName": "Integer"
    },
    {
     "NickName": "W",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "i",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 802,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      801,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 803,
   "Name": "Larger Than",
   "NickName": "Larger",
   "Description": "Larger than (or equal to)",
   "IsComponent": true,
   "Inputs": [
    [
     [
      704,
      0
     ]
    ],
    [
     [
      804,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Number"
    },
    {
     "NickName": "B",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "\u003E",
     "TypeName": "Boolean"
    },
    {
     "NickName": "\u003E=",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 804,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 805,
   "Name": "Dispatch",
   "NickName": "Dispatch",
   "Description": "Dispatch the items in a list into two target lists.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      801,
      0
     ]
    ],
    [
     [
      803,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "L",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 806,
   "Name": "Data",
   "NickName": "score max",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      801,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "score max",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 807,
   "Name": "Data",
   "NickName": "score min",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      805,
      1
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "score min",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 808,
   "Name": "Data",
   "NickName": "score max",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      806,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "score max",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 809,
   "Name": "Data",
   "NickName": "score min",
   "Description": "Contains a collection of generic data",
   "IsComponent": false,
   "Inputs": [
    [
     [
      807,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Number"
    }
   ],
   "Outputs": [
    {
     "NickName": "score min",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 810,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      514,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 811,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      516,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 812,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      517,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 813,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      325,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 814,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      531,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 815,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 816,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 817,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 818,
   "Name": "Merge",
   "NickName": "Merge",
   "Description": "Merge a bunch of data streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      815,
      0
     ]
    ],
    [
     [
      816,
      0
     ]
    ],
    [
     [
      817,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "D1",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D2",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D3",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D4",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 819,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      818,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 820,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 821,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 822,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 823,
   "Name": "Merge",
   "NickName": "Merge",
   "Description": "Merge a bunch of data streams",
   "IsComponent": true,
   "Inputs": [
    [
     [
      820,
      0
     ]
    ],
    [
     [
      821,
      0
     ]
    ],
    [
     [
      822,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "D1",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D2",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D3",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "D4",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 824,
   "Name": "Graft Tree",
   "NickName": "Graft",
   "Description": "Graft a data tree by adding an extra branch for every item.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      823,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 825,
   "Name": "Length",
   "NickName": "Len",
   "Description": "Measure the length of a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      829,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 826,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      825,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 827,
   "Name": "Length",
   "NickName": "Len",
   "Description": "Measure the length of a curve.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      353,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    }
   ],
   "Outputs": [
    {
     "NickName": "L",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 828,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      827,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 829,
   "Name": "Explode",
   "NickName": "Explode",
   "Description": "Explode a curve into smaller segments.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      518,
      0
     ]
    ],
    []
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Curve"
    },
    {
     "NickName": "R",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "S",
     "TypeName": "Curve"
    },
    {
     "NickName": "V",
     "TypeName": "Point"
    }
   ]
  },
  {
   "Id": 830,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 831,
   "Name": "Division",
   "NickName": "A/B",
   "Description": "Mathematical division",
   "IsComponent": true,
   "Inputs": [
    [],
    [
     [
      335,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ],
   "Outputs": [
    {
     "NickName": "R",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 832,
   "Name": "Tree Branch",
   "NickName": "TBranch",
   "Description": "Retrieve a specific branch from a data tree.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      321,
      0
     ]
    ],
    [
     [
      833,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Path"
    }
   ],
   "Outputs": [
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 833,
   "Name": "Number Slider",
   "NickName": "",
   "Description": "Numeric slider for single values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Number"
    }
   ]
  },
  {
   "Id": 834,
   "Name": "Tree Branch",
   "NickName": "TBranch",
   "Description": "Retrieve a specific branch from a data tree.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      318,
      0
     ]
    ],
    [
     [
      833,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Path"
    }
   ],
   "Outputs": [
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 835,
   "Name": "Tree Branch",
   "NickName": "TBranch",
   "Description": "Retrieve a specific branch from a data tree.",
   "IsComponent": true,
   "Inputs": [
    [
     [
      308,
      0
     ]
    ],
    [
     [
      833,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "T",
     "TypeName": "Generic Data"
    },
    {
     "NickName": "P",
     "TypeName": "Path"
    }
   ],
   "Outputs": [
    {
     "NickName": "B",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 836,
   "Name": "Panel",
   "NickName": "",
   "Description": "A panel for custom notes and text values",
   "IsComponent": false,
   "Inputs": [
    [
     [
      320,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "Input",
     "TypeName": "Text"
    }
   ],
   "Outputs": [
    {
     "NickName": "",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 837,
   "Name": "Collision One|Many",
   "NickName": "ColOM",
   "Description": "Test for one|many collision between objects",
   "IsComponent": true,
   "Inputs": [
    [
     [
      834,
      0
     ]
    ],
    [
     [
      832,
      0
     ]
    ]
   ],
   "InputParams": [
    {
     "NickName": "C",
     "TypeName": "Geometry"
    },
    {
     "NickName": "O",
     "TypeName": "Geometry"
    }
   ],
   "Outputs": [
    {
     "NickName": "C",
     "TypeName": "Boolean"
    },
    {
     "NickName": "I",
     "TypeName": "Integer"
    }
   ]
  },
  {
   "Id": 838,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 839,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 840,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 841,
   "Name": "C# Script",
   "NickName": "C#",
   "Description": "C# scripting component",
   "IsComponent": true,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "out",
     "TypeName": "Text"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 842,
   "Name": "Write to Text File",
   "NickName": "WriteTXT",
   "Description": "Writes a list of strings to a text file",
   "IsComponent": true,
   "Inputs": [
    [
     [
      843,
      0
     ]
    ],
    [
     [
      841,
      1
     ]
    ],
    [
     [
      844,
      0
     ]
    ],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "R",
     "TypeName": "Boolean"
    },
    {
     "NickName": "T",
     "TypeName": "Text"
    },
    {
     "NickName": "P",
     "TypeName": "Text"
    },
    {
     "NickName": "A",
     "TypeName": "Boolean"
    },
    {
     "NickName": "N",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "D",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 843,
   "Name": "Button",
   "NickName": "Button",
   "Description": "Button object with two values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "Button",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 844,
   "Name": "File Path",
   "NickName": "Path",
   "Description": "Contains a collection of file paths",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "Path",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 845,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 846,
   "Name": "C# Script",
   "NickName": "C#",
   "Description": "",
   "IsComponent": true,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "out",
     "TypeName": "Text"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 847,
   "Name": "Write to Text File",
   "NickName": "WriteTXT",
   "Description": "Writes a list of strings to a text file",
   "IsComponent": true,
   "Inputs": [
    [
     [
      848,
      0
     ]
    ],
    [
     [
      846,
      1
     ]
    ],
    [
     [
      849,
      0
     ]
    ],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "R",
     "TypeName": "Boolean"
    },
    {
     "NickName": "T",
     "TypeName": "Text"
    },
    {
     "NickName": "P",
     "TypeName": "Text"
    },
    {
     "NickName": "A",
     "TypeName": "Boolean"
    },
    {
     "NickName": "N",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "D",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 848,
   "Name": "Button",
   "NickName": "Button",
   "Description": "Button object with two values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "Button",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 849,
   "Name": "File Path",
   "NickName": "Path",
   "Description": "Contains a collection of file paths",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "Path",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 850,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  },
  {
   "Id": 851,
   "Name": "C# Script",
   "NickName": "C#",
   "Description": "",
   "IsComponent": true,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "out",
     "TypeName": "Text"
    },
    {
     "NickName": "A",
     "TypeName": "Generic Data"
    }
   ]
  },
  {
   "Id": 852,
   "Name": "Write to Text File",
   "NickName": "WriteTXT",
   "Description": "Writes a list of strings to a text file",
   "IsComponent": true,
   "Inputs": [
    [
     [
      853,
      0
     ]
    ],
    [
     [
      851,
      1
     ]
    ],
    [
     [
      854,
      0
     ]
    ],
    [],
    []
   ],
   "InputParams": [
    {
     "NickName": "R",
     "TypeName": "Boolean"
    },
    {
     "NickName": "T",
     "TypeName": "Text"
    },
    {
     "NickName": "P",
     "TypeName": "Text"
    },
    {
     "NickName": "A",
     "TypeName": "Boolean"
    },
    {
     "NickName": "N",
     "TypeName": "Boolean"
    }
   ],
   "Outputs": [
    {
     "NickName": "D",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 853,
   "Name": "Button",
   "NickName": "Button",
   "Description": "Button object with two values",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "Button",
     "TypeName": "Boolean"
    }
   ]
  },
  {
   "Id": 854,
   "Name": "File Path",
   "NickName": "Path",
   "Description": "Contains a collection of file paths",
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": [
    {
     "NickName": "Path",
     "TypeName": "Text"
    }
   ]
  },
  {
   "Id": 855,
   "Name": null,
   "NickName": null,
   "Description": null,
   "IsComponent": false,
   "Inputs": [],
   "InputParams": [],
   "Outputs": []
  }
 ]
}
